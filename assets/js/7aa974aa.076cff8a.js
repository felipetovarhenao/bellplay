"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5310],{8236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"reference/data-utilities/argsort","title":"argsort","description":"argsort","source":"@site/docs/reference/data-utilities/argsort.md","sourceDirName":"reference/data-utilities","slug":"/reference/data-utilities/argsort","permalink":"/docs/reference/data-utilities/argsort","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"apply","permalink":"/docs/reference/data-utilities/apply"},"next":{"title":"arithmser","permalink":"/docs/reference/data-utilities/arithmser"}}');var l=n(4848),s=n(8453);const i={hide_title:!0},o=void 0,c={},a=[{value:"<code>argsort</code>",id:"argsort",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3}];function d(e){const t={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"argsort",children:(0,l.jsx)(t.code,{children:"argsort"})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bell",children:"argsort(\n    @x ? ## llll (required)\n    @function null\n) -> llll\n"})}),"\n",(0,l.jsx)(t.p,{children:"Returns the indices that would sort an input llll in ascending order. Instead of returning a sorted version of the llll, it provides an index permutation that, when applied to the original llll, results in a sorted sequence."}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"@x ?"})," [",(0,l.jsx)(t.em,{children:(0,l.jsx)(t.strong,{children:"llll"})}),"]: llll to sort. (",(0,l.jsx)(t.em,{children:"required"}),")"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"@function"})," [",(0,l.jsx)(t.em,{children:(0,l.jsx)(t.strong,{children:"function"})}),"]: optional lambda sorting function. (",(0,l.jsx)(t.em,{children:"default"}),": ",(0,l.jsx)(t.code,{children:"null"}),")."]}),"\n"]}),"\n",(0,l.jsx)(t.hr,{}),"\n",(0,l.jsx)(t.h3,{id:"output",children:"Output"}),"\n",(0,l.jsxs)(t.p,{children:["sorted indices [",(0,l.jsx)(t.strong,{children:(0,l.jsx)(t.em,{children:"llll"})}),"]"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const l={},s=r.createContext(l);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);