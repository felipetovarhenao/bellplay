"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[3226],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(96540);const l={},r=i.createContext(l);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},96331:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/buffer-analysis/tonalkey","title":"tonalkey","description":"tonalkey","source":"@site/docs/reference/buffer-analysis/tonalkey.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/tonalkey","permalink":"/docs/reference/buffer-analysis/tonalkey","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"}],"version":"current","frontMatter":{"hide_title":true,"tags":["analyze","inspect"]},"sidebar":"tutorialSidebar","previous":{"title":"temporalvariance","permalink":"/docs/reference/buffer-analysis/temporalvariance"},"next":{"title":"zerocrossingrate","permalink":"/docs/reference/buffer-analysis/zerocrossingrate"}}');var l=s(74848),r=s(28453);const o={hide_title:!0,tags:["analyze","inspect"]},c=void 0,t={},d=[{value:"<code>tonalkey</code>",id:"tonalkey",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"tonalkey",children:(0,l.jsx)(n.code,{children:"tonalkey"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"tonalkey(\n    @numharmonics 4\n    @pcpsize 36\n    @profiletype 'bgate'\n    @slope 0.6\n    @usemajmin 0\n    @usepolyphony 1\n    @usethreechords 1\n    @mode 0\n) -> llll\n"})}),"\n",(0,l.jsx)(n.p,{children:"Generates an audio descriptor to perform tonal key signature estimation on a buffer."}),"\n",(0,l.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"tonalkey"})}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"tonalkey"})," is a mirror implementation of the same algorithm in the ",(0,l.jsx)(n.a,{href:"https://essentia.upf.edu/",children:"Essentia"})," library.\nFor more details on the algorithm, please check the ",(0,l.jsx)(n.a,{href:"https://essentia.upf.edu/algorithms_reference.html",children:"Essentia Algorithms reference"}),"."]})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@numharmonics"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: number of harmonics that should contribute to the polyphonic profile. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"4"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@pcpsize"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: pitch class profile size. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"36"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@profiletype"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"list"})}),"]: the type of polyphic profile to use for correlation calculation. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"'bgate'"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'diatonic'"}),": binary profile with diatonic notes of both modes."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'tonic triad'"}),": just the notes of the major and minor chords. exclusively for testing."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'krumhansl'"}),": reference key profiles based on cognitive experiments\u2014useful for pop music."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'temperley'"}),": key profiles extracted from corpus analysis of euroclassical music, especially in minor keys."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'shaath'"}),": profiles based on Krumhansl's specifically tuned to popular and electronic music."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'noland'"}),": profiles from Bach's ",(0,l.jsx)(n.em,{children:"Well Tempered Klavier"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'edma'"}),": automatic profiles extracted from corpus analysis of EDM\u2014better than Shaath's"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'edmm'"}),": same as edma, but manually tweaked according to heuristic observation."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'braw'"}),": profiles obtained by calculating the median profile for each mode from a subset of BeatPort dataset."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'bgate'"}),": same as braw but zeroing the 4 less relevant elements of each profile."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@slope"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: value of the slope of the exponential harmonic contribution to the polyphonic profile. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0.6"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@usemajmin"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: use a third profile called 'majmin' for ambiguous tracks. Only avalable for the edma, bgate and braw profiles. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@usepolyphony"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: enables the use of polyphonic profiles to define key profiles\u2014this includes the contributions from triads as well as pitch harmonics. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@usethreechords"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: consider only the 3 main triad chords of the key\u2014i.e., T, D, SD\u2014to build the polyphonic profiles. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@mode"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: analysis mode. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": global"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": time series"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": time-tagged time series"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,l.jsxs)(n.p,{children:["tonalkey descriptor [",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"tonalkey"})," is meant to be used with the ",(0,l.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = tonalkey(); ## generate tonalkey audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);