"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[9289],{4452:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"reference/buffer-analysis/chordsdetection","title":"chordsdetection","description":"chordsdetection","source":"@site/docs/reference/buffer-analysis/chordsdetection.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/chordsdetection","permalink":"/docs/reference/buffer-analysis/chordsdetection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"buf2ptracks","permalink":"/docs/reference/buffer-analysis/buf2ptracks"},"next":{"title":"dissonance","permalink":"/docs/reference/buffer-analysis/dissonance"}}');var t=s(4848),c=s(8453);const i={hide_title:!0},d=void 0,l={},o=[{value:"<code>chordsdetection</code>",id:"chordsdetection",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"chordsdetection",children:(0,t.jsx)(n.code,{children:"chordsdetection"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"chordsdetection(\n    @mode 0\n) -> llll\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Audio descriptor to perform chord estimation on a buffer. See ",(0,t.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"'chordsdetection'"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@mode"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: analysis mode. (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"0"}),").","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"0"}),": global"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"1"}),": time series"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"2"}),": time-tagged time series"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(n.p,{children:["chordsdetection descriptor [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"chordsdetection"})," is meant to be used with the ",(0,t.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = chordsdetection(); ## generate chordsdetection audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var r=s(6540);const t={},c=r.createContext(t);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);