"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7077],{6977:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"reference/data-utilities/export","title":"export","description":"export","source":"@site/docs/reference/data-utilities/export.md","sourceDirName":"reference/data-utilities","slug":"/reference/data-utilities/export","permalink":"/docs/reference/data-utilities/export","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"exists","permalink":"/docs/reference/data-utilities/exists"},"next":{"title":"fold","permalink":"/docs/reference/data-utilities/fold"}}');var s=r(4848),l=r(8453);const t={hide_title:!0},d=void 0,c={},o=[{value:"<code>export</code>",id:"export",level:2},{value:"Arguments",id:"arguments",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"export",children:(0,s.jsx)(n.code,{children:"export"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",children:"export(\n    @path ? ## symbol (required)\n    @stems 0\n    @format 'float32'\n    @vbrmode 'VBR'\n    @bitrate 0\n) -> null\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Exports the rendered output as either an audio (",(0,s.jsx)(n.code,{children:".wav"}),", ",(0,s.jsx)(n.code,{children:".aif"}),", ",(0,s.jsx)(n.code,{children:".aiff"}),", ",(0,s.jsx)(n.code,{children:".mp3"}),"), MIDI (",(0,s.jsx)(n.code,{children:".mid"}),",",(0,s.jsx)(n.code,{children:".midi"}),"), or roll (",(0,s.jsx)(n.code,{children:".llll"}),") file, given a output path. For audio files, mono stem files can be separately exported with the ",(0,s.jsx)(n.code,{children:"@stems"})," argument. See ",(0,s.jsx)(n.code,{children:"render"})," function."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@path ?"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"symbol"})}),"]: output file path. (",(0,s.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@stems"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int"})}),"]: stem export mode for audio files. (",(0,s.jsx)(n.em,{children:"default"}),": ",(0,s.jsx)(n.code,{children:"0"}),").","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@format"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"symbol"})}),"]: sample format. (",(0,s.jsx)(n.em,{children:"default"}),": ",(0,s.jsx)(n.code,{children:"'float32'"}),").","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'int8'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'int16'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'int24'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'int32'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'float32'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'float64'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'mulaw'"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'alaw'"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@vbrmode"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"symbol"})}),"]: mp3 variable bitrate mode. (",(0,s.jsx)(n.em,{children:"default"}),": ",(0,s.jsx)(n.code,{children:"'VBR'"}),").","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'CBR'"}),": constant bitrate"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'VBR'"}),": variable bitrate"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'ABR'"}),": average bitrate"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@bitrate"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int"})}),"]: mp3 bitrate in kbps. If 0, uses default. (",(0,s.jsx)(n.em,{children:"default"}),": ",(0,s.jsx)(n.code,{children:"0"}),")."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>d});var i=r(6540);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);