"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[8945],{16231:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"learning/examples/temporalquantization","title":"8. Temporal Quantization","description":"A basic example of temporal quantization, where transient-based segments are temporally shifted to align with a rhythmic grid.","source":"@site/docs/learning/examples/temporalquantization.md","sourceDirName":"learning/examples","slug":"/learning/examples/temporalquantization","permalink":"/docs/learning/examples/temporalquantization","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"getkey","permalink":"/docs/tags/getkey"},{"inline":true,"label":"importaudio","permalink":"/docs/tags/importaudio"},{"inline":true,"label":"onsets","permalink":"/docs/tags/onsets"},{"inline":true,"label":"render","permalink":"/docs/tags/render"},{"inline":true,"label":"setkey","permalink":"/docs/tags/setkey"},{"inline":true,"label":"transcribe","permalink":"/docs/tags/transcribe"},{"inline":true,"label":"x2dx","permalink":"/docs/tags/x-2-dx"}],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"8. Temporal Quantization","tags":["analyze","getkey","importaudio","onsets","render","setkey","transcribe","x2dx"]},"sidebar":"tutorialSidebar","previous":{"title":"7. MIDI Retuning","permalink":"/docs/learning/examples/midiretuning"},"next":{"title":"9. Audio Mosaicing","permalink":"/docs/learning/examples/audiomosaic"}}');var i=t(74848),r=t(28453);const s={sidebar_position:7,title:"8. Temporal Quantization",tags:["analyze","getkey","importaudio","onsets","render","setkey","transcribe","x2dx"]},o="Temporal Quantization",l={},d=[];function m(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"temporal-quantization",children:"Temporal Quantization"})}),"\n",(0,i.jsx)(n.p,{children:"A basic example of temporal quantization, where transient-based segments are temporally shifted to align with a rhythmic grid."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",metastring:'title="temporal_quantization.bell" showLineNumbers',children:"## Import an audio buffer from the file 'drums.wav'\n$b = importaudio('drums.wav');\n## Perform onset detection analysis on the buffer\n$analysis = onsets();\n## Apply the analysis to the buffer to extract onset markers\n$b = analyze($b, $analysis);\n## Retrieve the onset positions detected in the buffer\n$markers = $b.getkey('onsets');\n## Compute segment durations by converting onset times into durations\n$markerdurs = x2dx($markers $b.getkey('duration'));\n## Define the time unit for placing segments in the transcription\n$timeunit = 150;\n## Initialize the onset time for the transcription\n$onset = 0;\n## Loop through each detected onset marker and its corresponding duration\nfor $marker in $markers, $dur in $markerdurs do (\n    ## Define a segment using the detected duration and offset\n    $seg = $b.setkey('duration', $dur).setkey('offset', $marker);\n    ## Transcribe the segment with a gain envelope\n    $seg.transcribe(\n        ## Set the transcription onset time\n        @onset $onset\n        ## Apply an amplitude envelope\n        @gain [0 1 0] [1 0 -0.5] \n    );\n    ## Increment the onset time for the next segment\n    $onset += $timeunit\n);\n## Render the audio output and play the result\nrender(@play 1)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(96540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);