"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7225],{3918:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"reference/audio-processing/panning","title":"panning","description":"panning","source":"@site/docs/reference/audio-processing/panning.md","sourceDirName":"reference/audio-processing","slug":"/reference/audio-processing/panning","permalink":"/docs/reference/audio-processing/panning","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"overdrive","permalink":"/docs/reference/audio-processing/overdrive"},"next":{"title":"paulfreeze","permalink":"/docs/reference/audio-processing/paulfreeze"}}');var r=s(4848),l=s(8453);const c={hide_title:!0},d=void 0,o={},t=[{value:"<code>panning</code>",id:"panning",level:2}];function a(n){const e={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"panning",children:(0,r.jsx)(e.code,{children:"panning"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bell",children:"panning(\n    @position ?  ## int/float/list/llll (required)\n    @numchannels 2\n    @panmode 0\n    @panlaw 1\n    @rangetype 1\n    @range 0 1\n    @compensate 1\n    @spread 1\n    @envtimeunit 2\n) -> llll\n"})}),"\n",(0,r.jsxs)(e.p,{children:["Audio process operation for applying 1-D panning to a buffer. See ",(0,r.jsx)(e.code,{children:"process"}),"."]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@position ?"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int/float/list/llll"})}),"]: panning position, as either a single number, envelope, or buffer. (",(0,r.jsx)(e.em,{children:"required"}),")"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@numchannels"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: number of output channels."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@panmode"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: panning mode.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"0"}),": linear"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"1"}),": circular"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@panlaw"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: panning law.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"0"}),": nearest neighbor"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"1"}),": cosine"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@rangetype"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: panning range type.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"0"}),": custom"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"1"}),": 0 to 1"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"2"}),": -1 to 1"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"3"}),": loudspeaker number \u2014 0-based"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"4"}),": loudspeaker number \u2014 1-based"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@range"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"list"})}),"]: panning range, as a ",(0,r.jsx)(e.code,{children:"<min>"})," ",(0,r.jsx)(e.code,{children:"<max>"})," value pair. Ignored unless ",(0,r.jsx)(e.code,{children:"@rangetype"})," is ",(0,r.jsx)(e.code,{children:"0"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@compensate"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: Reduce gain for multichannel files by a factor of the number of channels.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"0"}),": off"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@spread"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int/float"})}),"]: multichannel panning spread, between 0 and 1."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"@envtimeunit"})," [",(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"int"})}),"]: time unit for ",(0,r.jsx)(e.code,{children:"@gain"})," envelope.","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"0"}),": milliseconds"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"1"}),": samples"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"2"}),": duration ratio"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Output"})}),"\n",(0,r.jsxs)(e.p,{children:["panning operation [",(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.em,{children:"llll"})}),"]"]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>d});var i=s(6540);const r={},l=i.createContext(r);function c(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);