"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5555],{3691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"reference/buffer-analysis/effectiveduration","title":"effectiveduration","description":"effectiveduration","source":"@site/docs/reference/buffer-analysis/effectiveduration.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/effectiveduration","permalink":"/docs/reference/buffer-analysis/effectiveduration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"dissonance","permalink":"/docs/reference/buffer-analysis/dissonance"},"next":{"title":"energy","permalink":"/docs/reference/buffer-analysis/energy"}}');var r=t(4848),i=t(8453);const o={hide_title:!0},l=void 0,a={},c=[{value:"<code>effectiveduration</code>",id:"effectiveduration",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"effectiveduration",children:(0,r.jsx)(n.code,{children:"effectiveduration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bell",children:"effectiveduration(\n    @thresholdratio 0.0200\n    @samplerate 44100\n) -> llll\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Audio descriptor to compute the effective duration of an envelope signal. The effective duration is a measure of the time the signal is perceptually meaningful. This is approximated by the time the envelope is above or equal to a given threshold and is above the -90dB noise floor. This measure allows to distinguish percussive sounds from sustained sounds but depends on the signal length. By default, this algorithm uses 40% of the envelope maximum as the threshold which is suited for short sounds. Note, that the 0% thresold corresponds to the duration of signal above -90db noise floor, while the 100% thresold corresponds to the number of times the envelope takes its maximum value. See ",(0,r.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"'effectiveduration'"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(effectiveduration());\n$effectiveduration = $buf.getkey('effectiveduration')\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@thresholdratio"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int/float"})}),"]: ratio of the envelope maximum to be used as the threshold."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@samplerate"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int"})}),"]: sampling rate."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output"})}),"\n",(0,r.jsxs)(n.p,{children:["effectiveduration descriptor [",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"llll"})}),"]"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);