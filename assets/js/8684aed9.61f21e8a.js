"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[3314],{8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(s.Provider,{value:n},e.children)}},9511:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"reference/randomization/initurn","title":"initurn","description":"initurn","source":"@site/docs/reference/randomization/initurn.md","sourceDirName":"reference/randomization","slug":"/reference/randomization/initurn","permalink":"/docs/reference/randomization/initurn","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"choose","permalink":"/docs/reference/randomization/choose"},"next":{"title":"rand","permalink":"/docs/reference/randomization/rand"}}');var t=i(4848),s=i(8453);const d={hide_title:!0},o=void 0,c={},l=[{value:"<code>initurn</code>",id:"initurn",level:2},{value:"Arguments",id:"arguments",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"initurn",children:(0,t.jsx)(n.code,{children:"initurn"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"initurn(\n    @size 10\n    @id 0\n    @useseed 0\n) -> null\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Initializes a new unique random number generator (URN), given a size and a URN identifier. Once initialized, the identifier can be used to generate unique random numbers with the ",(0,t.jsx)(n.code,{children:"urn"})," function. This allows for independent URNs of different sizes to be used within the same script. If a URN associated with the identifier already exists, the URN is reset. The initialized URN can be optionally be seed-based. See ",(0,t.jsx)(n.code,{children:"setseed"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@size"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: number of unique random numbers. (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"10"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@id"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int/float/symbol"})}),"]: identifier for unique random number generator. (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@useseed"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"list/llll"})}),"]: use random seed for URN associated with ",(0,t.jsx)(n.code,{children:"@id"}),". (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"0"}),")."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);