"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5771],{18673:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"learning/tutorials/basicworkflow","title":"1. Basic Workflow","description":"In bellplay~, the basic building block of our scripts is the buffer.","source":"@site/docs/learning/tutorials/basicworkflow.md","sourceDirName":"learning/tutorials","slug":"/learning/tutorials/basicworkflow","permalink":"/docs/learning/tutorials/basicworkflow","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"cycle","permalink":"/docs/tags/cycle"},{"inline":true,"label":"render","permalink":"/docs/tags/render"},{"inline":true,"label":"transcribe","permalink":"/docs/tags/transcribe"}],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0,"title":"1. Basic Workflow","tags":["cycle","render","transcribe"]},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/installation"},"next":{"title":"2. Variable Declarations","permalink":"/docs/learning/tutorials/variables"}}');var i=r(74848),t=r(28453);const l={sidebar_position:0,title:"1. Basic Workflow",tags:["cycle","render","transcribe"]},a="Basic Workflow",o={},c=[];function d(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"basic-workflow",children:"Basic Workflow"})}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.strong,{children:"bellplay~"}),", the basic building block of our scripts is the ",(0,i.jsx)(n.em,{children:"buffer"}),".\nConceptually, a ",(0,i.jsx)(n.strong,{children:"bellplay~"})," buffer is a structured container that holds information about a sound\u2014this includes not just the raw waveform data, but also metadata such as duration, pitch, sample rate, number of channels, and more."]}),"\n",(0,i.jsxs)(n.p,{children:["The general workflow and life-cycle of a buffer in a ",(0,i.jsx)(n.strong,{children:"bellplay~"})," script is the following:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generation"}),": buffers are created using synthesis or sampling techniques, and optionally analyzed/processed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transcription"}),": buffers are queued for rendering, each symbolically represented as a note in staff notation\u2014i.e., the timeline."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering"}),": All transcribed buffers are compiled and rendered into a single audio buffer. This buffer can then be used for subsequent iterations of this workflow to refine the final output as needed."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Below is an introductory example of a ",(0,i.jsx)(n.em,{children:"bell"})," script in ",(0,i.jsx)(n.strong,{children:"bellplay~"}),", which generates a short sinusoidal wave at 440 Hz:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",metastring:'title="basic_workflow.bell" showLineNumbers',children:"## first, let's generate buffer, in this case a sinusoidal oscillator.\n$osc = cycle();\n## then we transcribe the buffer for rendering\n$osc.transcribe();\n## finally, we render transcribed buffer\nrender()\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["When you load a ",(0,i.jsx)(n.code,{children:".bell"})," file in ",(0,i.jsx)(n.em,{children:"bellplay~"}),", the code is automatically evaluated everytime you save it. As such, it's worth memorizing and using the keyboard shortcut to save a file \u2014 ",(0,i.jsx)(n.code,{children:"\u2318+S"})," on Mac, and ",(0,i.jsx)(n.code,{children:"Ctrl+S"})," on Windows."]})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(96540);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);