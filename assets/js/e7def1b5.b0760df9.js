"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[8922],{6906:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/audio-analysis/spectralcentroid","title":"spectralcentroid","description":"spectralcentroid","source":"@site/docs/reference/audio-analysis/spectralcentroid.md","sourceDirName":"reference/audio-analysis","slug":"/reference/audio-analysis/spectralcentroid","permalink":"/docs/reference/audio-analysis/spectralcentroid","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"rolloff","permalink":"/docs/reference/audio-analysis/rolloff"},"next":{"title":"spectralflatness","permalink":"/docs/reference/audio-analysis/spectralflatness"}}');var t=s(4848),c=s(8453);const i={hide_title:!0},l=void 0,o={},d=[{value:"<code>spectralcentroid</code>",id:"spectralcentroid",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"spectralcentroid",children:(0,t.jsx)(n.code,{children:"spectralcentroid"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"spectralcentroid(\n    @mode 0\n) -> llll\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Audio descriptor to calculate the spectral centroid of a buffer, defined as the 'center of mass' of the spectrum, in Hertz. Perceptually, it has a robust connection with the impression of 'brightness' of a sound, and therefore is used to characterize musical timbre. It is calculated as the weighted mean of the frequencies present in the signal, with their magnitudes as the weights. See ",(0,t.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"'spectralcentroid'"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(spectralcentroid());\n$spectralcentroid = $buf.getkey('spectralcentroid')\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@mode"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: analysis mode.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"0"}),": global"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"1"}),": time series"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"2"}),": time-tagged time series"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"3"}),": buffer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Output"})}),"\n",(0,t.jsxs)(n.p,{children:["spectralcentroid descriptor [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const t={},c=r.createContext(t);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);