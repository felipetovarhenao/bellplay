"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5023],{400:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"reference/buffer-operations/mix","title":"mix","description":"mix","source":"@site/docs/reference/buffer-operations/mix.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/mix","permalink":"/docs/reference/buffer-operations/mix","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"minus","permalink":"/docs/reference/buffer-operations/minus"},"next":{"title":"mixdown","permalink":"/docs/reference/buffer-operations/mixdown"}}');var l=i(4848),r=i(8453);const c={hide_title:!0},d=void 0,o={},t=[{value:"<code>mix</code>",id:"mix",level:2}];function x(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"mix",children:(0,l.jsx)(n.code,{children:"mix"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"mix(\n    @buffers ?  ## list/llll (required)\n    @gains null\n    @offsets null\n    @resamplingfiltersize 11\n    @resamplingmode 'sinc'\n    @resamplingpolicy 3\n    @ampunit 0\n    @envampunit 0\n    @timeunit 0\n    @envtimeunit 2\n    @interp 0\n    @normalize 0\n) -> llll\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Audio process operation for mixing multiple buffers. See ",(0,l.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["This operation can be applied to a buffer, via the ",(0,l.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"$op = mix();\n$buffer = $buffer.process($op)\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@buffers ?"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"list/llll"})}),"]: list of buffers to mix. (",(0,l.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@gains"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"list/llll/null"})}),"]: gain values for each buffer to mix, as either a single number or envelope."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@offsets"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"list/null"})}),"]: time offset values for each buffer to mix."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@resamplingfiltersize"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: resampling filter size."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@resamplingmode"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"symbol"})}),"]: resampling mode.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'sinc'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'nearest neighbor'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'sample and hold'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'linear'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'quad'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'cubic'"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@resamplingpolicy"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: resampling policy.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": don't"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": to lowest"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": to highest"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": to most common"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": to max. current"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@ampunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: amplitude unit.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": linear"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": decibels"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@envampunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: envelope amplitude unit.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": linear"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": decibels"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@timeunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: time unit.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@envtimeunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: envelope time unit.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@interp"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: band-limited interpolation via resampling for non-integer offsets.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@normalize"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: normalization.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": never"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": always"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": overload protection only"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Output"})}),"\n",(0,l.jsxs)(n.p,{children:["mix operation [",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.em,{children:"llll"})}),"]"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(x,{...e})}):x(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var s=i(6540);const l={},r=s.createContext(l);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);