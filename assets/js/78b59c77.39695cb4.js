"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[987],{8237:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"reference/audio-processing/teeth","title":"teeth","description":"teeth","source":"@site/docs/reference/audio-processing/teeth.md","sourceDirName":"reference/audio-processing","slug":"/reference/audio-processing/teeth","permalink":"/bellplay/docs/reference/audio-processing/teeth","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"squareroot","permalink":"/bellplay/docs/reference/audio-processing/squareroot"},"next":{"title":"timesquash","permalink":"/bellplay/docs/reference/audio-processing/timesquash"}}');var s=r(4848),t=r(8453);const i={hide_title:!0},o=void 0,c={},d=[{value:"<code>teeth</code>",id:"teeth",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"teeth",children:(0,s.jsx)(n.code,{children:"teeth"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",children:"teeth(\n    @feedforward 5\n    @feedback 10\n    @gain 0.5000\n    @feedforwardgain 0.5000\n    @feedbackgain -0.5000\n) -> llll\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Audio process operation for applying comb filtering to a buffer, with feedforward and feedback delay control. See ",(0,s.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@feedforward"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int/float/llll"})}),"]: feedforward delay time, in milliseconds, as either a single number, envelope, or buffer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@feedback"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int/float/llll"})}),"]: feedback delay time, in milliseconds, as either a single number, envelope, or buffer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@gain"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int/float/llll"})}),"]: linear gain, as either a single number, envelope, or buffer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@feedforwardgain"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int/float/llll"})}),"]: linear feedforward gain, as either a single number, envelope, or buffer."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@feedbackgain"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"int/float/llll"})}),"]: linear feedback gain, as either a single number, envelope, or buffer."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output"})}),"\n",(0,s.jsxs)(n.p,{children:["teeth operation [",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"llll"})}),"]"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var l=r(6540);const s={},t=l.createContext(s);function i(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);