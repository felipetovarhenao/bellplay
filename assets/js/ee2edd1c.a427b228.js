"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[9606],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},76845:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"reference/buffer-analysis/envmintime","title":"envmintime","description":"envmintime","source":"@site/docs/reference/buffer-analysis/envmintime.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/envmintime","permalink":"/docs/reference/buffer-analysis/envmintime","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"}],"version":"current","frontMatter":{"hide_title":true,"tags":["analyze","inspect"]},"sidebar":"tutorialSidebar","previous":{"title":"envmaxtime","permalink":"/docs/reference/buffer-analysis/envmaxtime"},"next":{"title":"flux","permalink":"/docs/reference/buffer-analysis/flux"}}');var s=i(74848),r=i(28453);const l={hide_title:!0,tags:["analyze","inspect"]},a=void 0,c={},o=[{value:"<code>envmintime</code>",id:"envmintime",level:2},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"envmintime",children:(0,s.jsx)(n.code,{children:"envmintime"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",children:"envmintime() -> llll\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generates an audio descriptor to extract the time at which the global minima of the buffer's envelope occurs."}),"\n",(0,s.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"envmintime"})}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"envmintime"})," is a mirror implementation of the same algorithm in the ",(0,s.jsx)(n.a,{href:"https://essentia.upf.edu/",children:"Essentia"})," library.\nFor more details on the algorithm, please check the ",(0,s.jsx)(n.a,{href:"https://essentia.upf.edu/algorithms_reference.html",children:"Essentia Algorithms reference"}),"."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(n.p,{children:["envmintime descriptor [",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"envmintime"})," is meant to be used with the ",(0,s.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = envmintime(); ## generate envmintime audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);