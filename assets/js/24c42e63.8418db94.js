"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[6402],{5141:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"reference/buffer-analysis/temporalcentroid","title":"temporalcentroid","description":"temporalcentroid","source":"@site/docs/reference/buffer-analysis/temporalcentroid.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/temporalcentroid","permalink":"/docs/reference/buffer-analysis/temporalcentroid","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"strongpeak","permalink":"/docs/reference/buffer-analysis/strongpeak"},"next":{"title":"temporalflatness","permalink":"/docs/reference/buffer-analysis/temporalflatness"}}');var s=r(4848),l=r(8453);const o={hide_title:!0},i=void 0,a={},c=[{value:"<code>temporalcentroid</code>",id:"temporalcentroid",level:2},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"temporalcentroid",children:(0,s.jsx)(n.code,{children:"temporalcentroid"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",children:"temporalcentroid() -> llll\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Audio descriptor to calculate the temporal centroid of a buffer, defined as the point in time that is a temporal balancing point of the sound's energy. See ",(0,s.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"'temporalcentroid'"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(n.p,{children:["temporalcentroid descriptor [",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"temporalcentroid"})," is meant to be used with the ",(0,s.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = temporalcentroid(); ## generate temporalcentroid audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);