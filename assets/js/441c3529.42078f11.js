"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5300],{447:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"reference/buffer-operations/groove","title":"groove","description":"groove","source":"@site/docs/reference/buffer-operations/groove.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/groove","permalink":"/docs/reference/buffer-operations/groove","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"gain","permalink":"/docs/reference/buffer-operations/gain"},"next":{"title":"hoadecode","permalink":"/docs/reference/buffer-operations/hoadecode"}}');var s=n(4848),t=n(8453);const i={hide_title:!0},l=void 0,c={},a=[{value:"<code>groove</code>",id:"groove",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const r={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"groove",children:(0,s.jsx)(r.code,{children:"groove"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bell",children:"groove(\n    @rate 1\n    @duration 1000\n) -> llll\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Audio processing operation for applying variable-rate sample playback to a buffer. See ",(0,s.jsx)(r.code,{children:"process"}),"."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"@rate"})," [",(0,s.jsx)(r.em,{children:(0,s.jsx)(r.strong,{children:"int/float/list/llll"})}),"]: playback rate, as either a single number, envelope, or control buffer. (",(0,s.jsx)(r.em,{children:"default"}),": ",(0,s.jsx)(r.code,{children:"1"}),")."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"@duration"})," [",(0,s.jsx)(r.em,{children:(0,s.jsx)(r.strong,{children:"int/float"})}),"]: duration in milliseconds. Ignored if ",(0,s.jsx)(r.code,{children:"@rate"})," is a buffer. (",(0,s.jsx)(r.em,{children:"default"}),": ",(0,s.jsx)(r.code,{children:"1000"}),")."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"output",children:"Output"}),"\n",(0,s.jsxs)(r.p,{children:["groove operation [",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.em,{children:"llll"})}),"]"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"groove"})," is meant to be used with the ",(0,s.jsx)(r.code,{children:"process"})," function:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = groove(@rate 0.5 2 @duration 5000); ## processing operation\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after groove process')\n"})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var o=n(6540);const s={},t=o.createContext(s);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);