"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[6253],{2590:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"reference/buffer-analysis/spectralspread","title":"spectralspread","description":"spectralspread","source":"@site/docs/reference/buffer-analysis/spectralspread.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/spectralspread","permalink":"/docs/reference/buffer-analysis/spectralspread","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"spectralskewness","permalink":"/docs/reference/buffer-analysis/spectralskewness"},"next":{"title":"spectralvariance","permalink":"/docs/reference/buffer-analysis/spectralvariance"}}');var l=r(4848),t=r(8453);const c={hide_title:!0},a=void 0,i={},d=[{value:"<code>spectralspread</code>",id:"spectralspread",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function o(e){const s={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h2,{id:"spectralspread",children:(0,l.jsx)(s.code,{children:"spectralspread"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bell",children:"spectralspread(\n    @mode 0\n) -> llll\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Audio descriptor to compute the spectral spread of a buffer. See ",(0,l.jsx)(s.code,{children:"analyze"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"'spectralspread'"})}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"@mode"})," [",(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:"int"})}),"]: analysis mode. (",(0,l.jsx)(s.em,{children:"default"}),": ",(0,l.jsx)(s.code,{children:"0"}),").","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"0"}),": global"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"1"}),": time series"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"2"}),": time-tagged time series"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"3"}),": buffer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"output",children:"Output"}),"\n",(0,l.jsxs)(s.p,{children:["spectralspread descriptor [",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.em,{children:"llll"})}),"]"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"spectralspread"})," is meant to be used with the ",(0,l.jsx)(s.code,{children:"analyze"})," function:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = spectralspread(); ## generate spectralspread audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>a});var n=r(6540);const l={},t=n.createContext(l);function c(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);