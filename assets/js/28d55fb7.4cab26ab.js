"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[1392],{974:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"reference/buffer-analysis/mfcc","title":"mfcc","description":"mfcc","source":"@site/docs/reference/buffer-analysis/mfcc.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/mfcc","permalink":"/docs/reference/buffer-analysis/mfcc","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"maxmagfreq","permalink":"/docs/reference/buffer-analysis/maxmagfreq"},"next":{"title":"onsetdetection","permalink":"/docs/reference/buffer-analysis/onsetdetection"}}');var c=s(4848),r=s(8453);const l={hide_title:!0},d=void 0,t={},o=[{value:"<code>mfcc</code>",id:"mfcc",level:2}];function h(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"mfcc",children:(0,c.jsx)(n.code,{children:"mfcc"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bell",children:"mfcc(\n    @dcttype 2\n    @highfrequencybound 11000\n    @inputsize 1025\n    @liftering 0\n    @logtype 'dbamp'\n    @lowfrequencybound 0\n    @normalize 'unit_sum'\n    @numberbands 40\n    @numbercoefficients 13\n    @samplerate 44100\n    @silencethreshold 0.0000\n    @type 'power'\n    @warpingformula 'htkmel'\n    @weighting 'warping'\n    @mode 0\n) -> llll\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Audio descriptor to compute the mel-frequency cepstrum coefficients of a buffer's spectrum. As there is no standard implementation, the MFCC-FB40 is used by default. See ",(0,c.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,c.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'mfcc_bands'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'mfcc'"})}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(mfcc());\n$mfcc_bands = $buf.getkey('mfcc_bands');\n$mfcc = $buf.getkey('mfcc')\n"})}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@dcttype"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: DCT type."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@highfrequencybound"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int/float"})}),"]: upper bound of the frequency range, in Hz."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@inputsize"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: size of input spectrum."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@liftering"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: liftering coefficient. Use ",(0,c.jsx)(n.code,{children:"0"})," to bypass it."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@logtype"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"symbol"})}),"]: logarithmic compression type.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'natural'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'dbpow'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'dbamp'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'log'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@lowfrequencybound"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"float"})}),"]: lower bound of the frequency range, in Hz."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@normalize"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"symbol"})}),"]: spectrum bin weights to use for each mel band.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'unit_sum'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'unit_tri'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'unit_max'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@numberbands"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: number of mel-bands in the filter."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@numbercoefficients"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: number of output mel coefficients."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@samplerate"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: sampling rate of the audio signal, in Hz."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@silencethreshold"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int/float"})}),"]: silence threshold for computing log-energy bands."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@type"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"symbol"})}),"]: use magnitude or power spectrum.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'magnitude'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'power'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@warpingformula"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"symbol"})}),"]: scale implementation type.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'slaneymel'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'htkmel'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@weighting"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"symbol"})}),"]: type of weighting function for determining triangle area.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'warping'"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"'linear'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"@mode"})," [",(0,c.jsx)(n.em,{children:(0,c.jsx)(n.strong,{children:"int"})}),"]: analysis mode.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"0"}),": global"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"1"}),": time series"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"2"}),": time-tagged time series"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"3"}),": buffer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),"\n",(0,c.jsxs)(n.p,{children:["mfcc descriptor [",(0,c.jsx)(n.strong,{children:(0,c.jsx)(n.em,{children:"llll"})}),"]"]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(6540);const c={},r=i.createContext(c);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);