"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7146],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var s=r(96540);const i={},c=s.createContext(i);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(c.Provider,{value:n},e.children)}},46889:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/buffer-operations/crop","title":"crop","description":"crop","source":"@site/docs/reference/buffer-operations/crop.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/crop","permalink":"/docs/reference/buffer-operations/crop","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"},{"inline":true,"label":"process","permalink":"/docs/tags/process"}],"version":"current","frontMatter":{"hide_title":true,"tags":["inspect","process"]},"sidebar":"tutorialSidebar","previous":{"title":"clip","permalink":"/docs/reference/buffer-operations/clip"},"next":{"title":"dcfilter","permalink":"/docs/reference/buffer-operations/dcfilter"}}');var i=r(74848),c=r(28453);const t={hide_title:!0,tags:["inspect","process"]},o=void 0,l={},d=[{value:"<code>crop</code>",id:"crop",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"crop",children:(0,i.jsx)(n.code,{children:"crop"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",children:"crop(\n    @start 0\n    @end 1000\n    @timeunit 0\n) -> llll\n"})}),"\n",(0,i.jsx)(n.p,{children:"Generates an audio process operation for cropping a buffer."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@start"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: start time. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@end"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: end time. if negative, it counts from the end. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"1000"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@timeunit"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: time unit for ",(0,i.jsx)(n.code,{children:"@start"})," and ",(0,i.jsx)(n.code,{children:"@end"}),". (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"0"}),").","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(n.p,{children:["crop operation [",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"crop"})," is meant to be used with the ",(0,i.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = crop(@start 1000 @end 2000); ## processing operation\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after crop process')\n"})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);