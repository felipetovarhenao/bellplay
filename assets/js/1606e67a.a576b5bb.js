"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7633],{310:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/utilities/seq2markov","title":"seq2markov","description":"seq2markov","source":"@site/docs/reference/utilities/seq2markov.md","sourceDirName":"reference/utilities","slug":"/reference/utilities/seq2markov","permalink":"/docs/reference/utilities/seq2markov","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"scoreconfig","permalink":"/docs/reference/utilities/scoreconfig"},"next":{"title":"setcorpus","permalink":"/docs/reference/utilities/setcorpus"}}');var t=r(4848),i=r(8453);const o={hide_title:!0},l=void 0,c={},d=[{value:"<code>seq2markov</code>",id:"seq2markov",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"seq2markov",children:(0,t.jsx)(n.code,{children:"seq2markov"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"seq2markov(\n    @data ?  ## llll (required)\n    @order 1\n    @prepad '^'\n    @postpad '$'\n) -> llll\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Constructs a Markov chain from a given sequence of data. See ",(0,t.jsx)(n.code,{children:"markov2seq"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@data ?"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"llll"})}),"]: input sequence from which the Markov model will be built. (",(0,t.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@order"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: order of the Markov chain, determining the length of history considered for state transitions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@prepad"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"symbol"})}),"]: padding symbol used at the beginning of the sequence to handle initial states."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@postpad"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"symbol"})}),"]: padding symbol used at the end of the sequence to handle final states"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Output"})}),"\n",(0,t.jsxs)(n.p,{children:["transition probability matrix in sparse form [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);