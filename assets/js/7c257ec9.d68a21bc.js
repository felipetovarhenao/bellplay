"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[4586],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var s=r(96540);const i={},l=s.createContext(i);function c(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(l.Provider,{value:n},e.children)}},54495:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"reference/buffer-operations/power","title":"power","description":"power","source":"@site/docs/reference/buffer-operations/power.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/power","permalink":"/docs/reference/buffer-operations/power","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"},{"inline":true,"label":"process","permalink":"/docs/tags/process"}],"version":"current","frontMatter":{"hide_title":true,"tags":["inspect","process"]},"sidebar":"tutorialSidebar","previous":{"title":"pong","permalink":"/docs/reference/buffer-operations/pong"},"next":{"title":"process","permalink":"/docs/reference/buffer-operations/process"}}');var i=r(74848),l=r(28453);const c={hide_title:!0,tags:["inspect","process"]},o=void 0,d={},t=[{value:"<code>power</code>",id:"power",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"power",children:(0,i.jsx)(n.code,{children:"power"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",children:"power(\n    @operand 2\n    @resamplingfiltersize 11\n    @resamplingmode 'sinc'\n    @resamplingpolicy 3\n    @envtimeunit 2\n) -> llll\n"})}),"\n",(0,i.jsx)(n.p,{children:"Generates an audio process operation for performing exponentiation on a buffer."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@operand"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float/llll"})}),"]: value to raise buffer signal to, either as a single number, envelope, or buffer. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"2"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingfiltersize"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: resampling filter size. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"11"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingmode"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"symbol"})}),"]: resampling mode. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"'sinc'"}),").","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'sinc'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'nearest neighbor'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'sample and hold'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'linear'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'quad'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'cubic'"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingpolicy"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: resampling policy. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"3"}),").","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": don't"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": to lowest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": to highest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": to most common"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": to max. current"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@envtimeunit"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: envelope time unit. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"2"}),").","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(n.p,{children:["power operation [",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"power"})," is meant to be used with the ",(0,i.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = power(); ## processing operation\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after power process')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);