"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[4788],{4183:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"reference/buffer-operations/overdrive","title":"overdrive","description":"overdrive","source":"@site/docs/reference/buffer-operations/overdrive.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/overdrive","permalink":"/docs/reference/buffer-operations/overdrive","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"onepole","permalink":"/docs/reference/buffer-operations/onepole"},"next":{"title":"panning","permalink":"/docs/reference/buffer-operations/panning"}}');var t=n(4848),s=n(8453);const i={hide_title:!0},l=void 0,c={},d=[{value:"<code>overdrive</code>",id:"overdrive",level:2}];function a(e){const r={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"overdrive",children:(0,t.jsx)(r.code,{children:"overdrive"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bell",children:"overdrive(\n    @factor ?  ## int/float/llll (required)\n) -> llll\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Audio process operation for applying soft-clip distortion to a buffer. See ",(0,t.jsx)(r.code,{children:"process"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["This operation can be applied to a buffer, via the ",(0,t.jsx)(r.code,{children:"process"})," function:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bell",children:"$op = overdrive();\n$buffer = $buffer.process($op)\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Arguments"}),":"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"@factor ?"})," [",(0,t.jsx)(r.em,{children:(0,t.jsx)(r.strong,{children:"int/float/llll"})}),"]: amplitude distortion factor, either as single number or envelope. (",(0,t.jsx)(r.em,{children:"required"}),")"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Output"})}),"\n",(0,t.jsxs)(r.p,{children:["overdrive operation [",(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.em,{children:"llll"})}),"]"]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var o=n(6540);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);