"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[1267],{2595:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>f});const s=JSON.parse('{"id":"reference/buffer-operations/freqshift","title":"freqshift","description":"freqshift","source":"@site/docs/reference/buffer-operations/freqshift.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/freqshift","permalink":"/docs/reference/buffer-operations/freqshift","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"freeverb","permalink":"/docs/reference/buffer-operations/freeverb"},"next":{"title":"fromdiffs","permalink":"/docs/reference/buffer-operations/fromdiffs"}}');var t=r(4848),i=r(8453);const o={hide_title:!0},l=void 0,c={},f=[{value:"<code>freqshift</code>",id:"freqshift",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"freqshift",children:(0,t.jsx)(n.code,{children:"freqshift"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"freqshift(\n    @shift 0\n    @negative 0\n) -> llll\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Generates audio process operation for applying frequency shifting to a buffer. See ",(0,t.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@shift"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int/float/list/llll"})}),"]: frequency shift in Hertz, as either a single number, an envelope or buffer. (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@negative"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: Include negative sideband  in output. (",(0,t.jsx)(n.em,{children:"default"}),": ",(0,t.jsx)(n.code,{children:"0"}),").","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(n.p,{children:["freqshift operation [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"freqshift"})," is meant to be used with the ",(0,t.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = freqshift(-20); ## processing operation\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after freqshift process')\n"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);