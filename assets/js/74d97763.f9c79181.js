"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[692],{28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>i});var s=n(96540);const t={},a=s.createContext(t);function l(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(a.Provider,{value:r},e.children)}},58227:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"reference/buffer-analysis/temporalspread","title":"temporalspread","description":"temporalspread","source":"@site/docs/reference/buffer-analysis/temporalspread.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/temporalspread","permalink":"/docs/reference/buffer-analysis/temporalspread","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"}],"version":"current","frontMatter":{"hide_title":true,"tags":["analyze","inspect"]},"sidebar":"tutorialSidebar","previous":{"title":"temporalskewness","permalink":"/docs/reference/buffer-analysis/temporalskewness"},"next":{"title":"temporalvariance","permalink":"/docs/reference/buffer-analysis/temporalvariance"}}');var t=n(74848),a=n(28453);const l={hide_title:!0,tags:["analyze","inspect"]},i=void 0,o={},c=[{value:"<code>temporalspread</code>",id:"temporalspread",level:2},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"temporalspread",children:(0,t.jsx)(r.code,{children:"temporalspread"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bell",children:"temporalspread() -> llll\n"})}),"\n",(0,t.jsx)(r.p,{children:"Generates an audio descriptor to compute the temporal spread of a buffer."}),"\n",(0,t.jsx)(r.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.code,{children:"temporalspread"})}),"\n"]}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"temporalspread"})," is a mirror implementation of the same algorithm in the ",(0,t.jsx)(r.a,{href:"https://essentia.upf.edu/",children:"Essentia"})," library.\nFor more details on the algorithm, please check the ",(0,t.jsx)(r.a,{href:"https://essentia.upf.edu/algorithms_reference.html",children:"Essentia Algorithms reference"}),"."]})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(r.p,{children:["temporalspread descriptor [",(0,t.jsx)(r.strong,{children:(0,t.jsx)(r.em,{children:"llll"})}),"]"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"temporalspread"})," is meant to be used with the ",(0,t.jsx)(r.code,{children:"analyze"})," function:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = temporalspread(); ## generate temporalspread audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);