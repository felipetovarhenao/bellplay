"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[6865],{8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var t=n(6540);const s={},i=t.createContext(s);function l(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:r},e.children)}},9886:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/utilities/createtree","title":"createtree","description":"createtree","source":"@site/docs/reference/utilities/createtree.md","sourceDirName":"reference/utilities","slug":"/reference/utilities/createtree","permalink":"/docs/reference/utilities/createtree","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"choose","permalink":"/docs/reference/utilities/choose"},"next":{"title":"dbtoa","permalink":"/docs/reference/utilities/dbtoa"}}');var s=n(4848),i=n(8453);const l={hide_title:!0},c=void 0,o={},d=[{value:"<code>createtree</code>",id:"createtree",level:2}];function a(e){const r={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"createtree",children:(0,s.jsx)(r.code,{children:"createtree"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bell",children:"createtree(\n    @data ?  ## llll (required)\n    @mode 0\n) -> llll\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Creates a k-dimensional tree for optimized nearest-neighbor search of multidimensional data. See ",(0,s.jsx)(r.code,{children:"querytree"}),"."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"@data ?"})," [",(0,s.jsx)(r.em,{children:(0,s.jsx)(r.strong,{children:"llll"})}),"]: data as a list of numeric lists. (",(0,s.jsx)(r.em,{children:"required"}),")"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"@mode"})," [",(0,s.jsx)(r.em,{children:(0,s.jsx)(r.strong,{children:"int"})}),"]: data scaling mode","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"0"}),": minmax normalization."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"1"}),": standardization."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Output"})}),"\n",(0,s.jsxs)(r.p,{children:["k-dimensional tree reference [",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.em,{children:"llll"})}),"]"]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);