"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[2374],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var r=s(6540);const t={},l=r.createContext(t);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(l.Provider,{value:n},e.children)}},9549:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/buffer-analysis/onsets","title":"onsets","description":"onsets","source":"@site/docs/reference/buffer-analysis/onsets.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/onsets","permalink":"/docs/reference/buffer-analysis/onsets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"onsetdetection","permalink":"/docs/reference/buffer-analysis/onsetdetection"},"next":{"title":"pitchmelodia","permalink":"/docs/reference/buffer-analysis/pitchmelodia"}}');var t=s(4848),l=s(8453);const o={hide_title:!0},i=void 0,c={},d=[{value:"<code>onsets</code>",id:"onsets",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"onsets",children:(0,t.jsx)(n.code,{children:"onsets"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"onsets(\n    @alpha 0.1000\n    @delay 5\n    @framerate 86.1328\n    @silencethreshold 0.0200\n) -> llll\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Audio descriptor to compute the onset positions in a buffer. See ",(0,t.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"'onsets'"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(onsets());\n$onsets = $buf.getkey('onsets')\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@alpha"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"float"})}),"]: proportion of the mean included to reject smaller peaks\u2014filters very short onsets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@delay"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"int"})}),"]: number of frames used to compute the threshold\u2014size of short-onset filter."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@framerate"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"float"})}),"]: frames per second."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@silencethreshold"})," [",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"float"})}),"]: threshold for silence."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Output"})}),"\n",(0,t.jsxs)(n.p,{children:["onsets descriptor [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);