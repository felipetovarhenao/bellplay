"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[9031],{5194:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reference/audio-analysis/temporalcentroid","title":"temporalcentroid","description":"temporalcentroid","source":"@site/docs/reference/audio-analysis/temporalcentroid.md","sourceDirName":"reference/audio-analysis","slug":"/reference/audio-analysis/temporalcentroid","permalink":"/bellplay/docs/reference/audio-analysis/temporalcentroid","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"strongpeak","permalink":"/bellplay/docs/reference/audio-analysis/strongpeak"},"next":{"title":"temporalflatness","permalink":"/bellplay/docs/reference/audio-analysis/temporalflatness"}}');var l=t(4848),o=t(8453);const s={hide_title:!0},i=void 0,a={},c=[{value:"<code>temporalcentroid</code>",id:"temporalcentroid",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"temporalcentroid",children:(0,l.jsx)(n.code,{children:"temporalcentroid"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"temporalcentroid() -> llll\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Audio descriptor to calculate the temporal centroid of a buffer, defined as the point in time that is a temporal balancing point of the sound's energy. See ",(0,l.jsx)(n.code,{children:"analyze"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'temporalcentroid'"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(temporalcentroid());\n$temporalcentroid = $buf.getkey('temporalcentroid')\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Output"})}),"\n",(0,l.jsxs)(n.p,{children:["temporalcentroid descriptor [",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.em,{children:"llll"})}),"]"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const l={},o=r.createContext(l);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);