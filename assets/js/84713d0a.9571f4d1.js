"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[3355],{8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(6540);const l={},i=s.createContext(l);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(i.Provider,{value:n},e.children)}},8502:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"reference/buffer-operations/scaling","title":"scaling","description":"scaling","source":"@site/docs/reference/buffer-operations/scaling.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/scaling","permalink":"/docs/reference/buffer-operations/scaling","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"rubberband","permalink":"/docs/reference/buffer-operations/rubberband"},"next":{"title":"scrub","permalink":"/docs/reference/buffer-operations/scrub"}}');var l=r(4848),i=r(8453);const t={hide_title:!0},c=void 0,o={},a=[{value:"<code>scaling</code>",id:"scaling",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"scaling",children:(0,l.jsx)(n.code,{children:"scaling"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"scaling(\n    @inmin 0\n    @inmax 1\n    @outmin 0\n    @outmax 1\n) -> llll\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Audio process operation for applying amplitude scaling to a buffer. See ",(0,l.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@inmin"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float/llll"})}),"]: input minimum value. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@inmax"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float/llll"})}),"]: input maximum value. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@outmin"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float/llll"})}),"]: output minimum value. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@outmax"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float/llll"})}),"]: output maximum value. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),")."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,l.jsxs)(n.p,{children:["scaling operation [",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"scaling"})," is meant to be used with the ",(0,l.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = scaling(); ## processing operation\n$buffer.inspect('before process');\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after process')\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);