"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[2436],{2252:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"reference/data-utilities/directin","title":"directin","description":"directin","source":"@site/docs/reference/data-utilities/directin.md","sourceDirName":"reference/data-utilities","slug":"/reference/data-utilities/directin","permalink":"/docs/reference/data-utilities/directin","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"diff","permalink":"/docs/reference/data-utilities/diff"},"next":{"title":"directout","permalink":"/docs/reference/data-utilities/directout"}}');var r=i(4848),l=i(8453);const s={hide_title:!0},d=void 0,c={},o=[{value:"<code>directin</code>",id:"directin",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3}];function a(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"directin",children:(0,r.jsx)(n.code,{children:"directin"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bell",children:"directin(\n    @inlet ? ## required\n) -> llll/null\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"directin"})," is a built-in function in the ",(0,r.jsx)(n.em,{children:"bell"})," programming language and is not unique or exclusive to ",(0,r.jsx)(n.strong,{children:"bellplay~"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Receives data during evaluation from one direct inlet. It is useful for setting up lambda loops. Unlike what happens with its corresponding pseudovariables ",(0,r.jsx)(n.code,{children:"$di<n>"}),", providing code containing the ",(0,r.jsx)(n.code,{children:"directout()"})," function does not create automatically the direct inlet. For this reason, it is generally necessary to set the ",(0,r.jsx)(n.code,{children:"@directins"})," object argument."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@inlet"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"llll"})}),"] (",(0,r.jsx)(n.em,{children:"required"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,r.jsxs)(n.p,{children:["Value of direct inlet. [",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"llll/null"})}),"]"]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"directin"})," will return ",(0,r.jsx)(n.code,{children:"null"})," ",(0,r.jsx)(n.em,{children:"without raising an error"})," if required arguments are not provided."]})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var t=i(6540);const r={},l=t.createContext(r);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);