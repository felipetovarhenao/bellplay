"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[265],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(96540);const i={},l=r.createContext(i);function c(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(l.Provider,{value:n},e.children)}},66139:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/buffer-operations/biquad","title":"biquad","description":"biquad","source":"@site/docs/reference/buffer-operations/biquad.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/biquad","permalink":"/docs/reference/buffer-operations/biquad","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"},{"inline":true,"label":"onepole","permalink":"/docs/tags/onepole"},{"inline":true,"label":"process","permalink":"/docs/tags/process"}],"version":"current","frontMatter":{"hide_title":true,"tags":["inspect","onepole","process"]},"sidebar":"tutorialSidebar","previous":{"title":"absolute","permalink":"/docs/reference/buffer-operations/absolute"},"next":{"title":"clip","permalink":"/docs/reference/buffer-operations/clip"}}');var i=s(74848),l=s(28453);const c={hide_title:!0,tags:["inspect","onepole","process"]},o=void 0,t={},d=[{value:"<code>biquad</code>",id:"biquad",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"biquad",children:(0,i.jsx)(n.code,{children:"biquad"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",children:"biquad(\n    @frequency 2000\n    @type 2\n    @gain 1\n    @q 80\n) -> llll\n"})}),"\n",(0,i.jsx)(n.p,{children:"Generates an audio process operation for applying biquad filtering to a buffer."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@frequency"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: cutoff/center frequency. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"2000"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@type"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/symbol"})}),"]: filter type, as a symbol or integer. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"2"}),").","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": lowpass"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": highpass"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": bandpass"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": bandstop"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": peaknotch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"5"}),": lowshelf"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"6"}),": highshelf"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"7"}),": resonant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"8"}),": allpass"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@gain"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: linear gain. (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"1"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@q"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: resonance or slope, depending on ",(0,i.jsx)(n.code,{children:"@type"}),". (",(0,i.jsx)(n.em,{children:"default"}),": ",(0,i.jsx)(n.code,{children:"80"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(n.p,{children:["biquad operation [",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"biquad"})," is meant to be used with the ",(0,i.jsx)(n.code,{children:"process"})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$op = biquad(); ## processing operation\n$buffer = $buffer.process($op); ## apply processing\n$buffer.inspect('after biquad process')\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);