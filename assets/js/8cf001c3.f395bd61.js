"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[8609],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var s=i(96540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},38609:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"reference/buffer-analysis/pitchyin","title":"pitchyin","description":"pitchyin","source":"@site/docs/reference/buffer-analysis/pitchyin.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/pitchyin","permalink":"/docs/reference/buffer-analysis/pitchyin","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"}],"version":"current","frontMatter":{"hide_title":true,"tags":["analyze","inspect"]},"sidebar":"tutorialSidebar","previous":{"title":"pitchmelodia","permalink":"/docs/reference/buffer-analysis/pitchmelodia"},"next":{"title":"rhythm","permalink":"/docs/reference/buffer-analysis/rhythm"}}');var r=i(74848),l=i(28453);const t={hide_title:!0,tags:["analyze","inspect"]},c=void 0,d={},a=[{value:"<code>pitchyin</code>",id:"pitchyin",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"pitchyin",children:(0,r.jsx)(n.code,{children:"pitchyin"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bell",children:"pitchyin(\n    @framesize 2048\n    @interpolate 1\n    @maxfrequency 22050\n    @minfrequency 20\n    @samplerate 44100\n    @tolerance 0.15\n    @mode 0\n) -> llll\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generates an audio descriptor to estimate the fundamental frequency of a monophonic buffer. It is an implementation of the Yin algorithm for computations in the time domain."}),"\n",(0,r.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"pitchyin"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"pitchyin_confidence"})}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"pitchyin"})," is a mirror implementation of the same algorithm in the ",(0,r.jsx)(n.a,{href:"https://essentia.upf.edu/",children:"Essentia"})," library.\nFor more details on the algorithm, please check the ",(0,r.jsx)(n.a,{href:"https://essentia.upf.edu/algorithms_reference.html",children:"Essentia Algorithms reference"}),"."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@framesize"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int"})}),"]: number of samples in the input frame. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"2048"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@interpolate"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int"})}),"]: enable interpolation. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"1"}),").","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@maxfrequency"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int/float"})}),"]: the maximum allowed frequency. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"22050"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@minfrequency"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int/float"})}),"]: the minimum allowed frequency. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"20"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@samplerate"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int"})}),"]: sampling rate of the input audio. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"44100"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@tolerance"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int/float"})}),"]: tolerance for peak detection. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"0.15"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@mode"})," [",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"int"})}),"]: analysis mode. (",(0,r.jsx)(n.em,{children:"default"}),": ",(0,r.jsx)(n.code,{children:"0"}),").","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"0"}),": global"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"1"}),": time series"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"2"}),": time-tagged time series"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"3"}),": buffer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,r.jsxs)(n.p,{children:["pitchyin descriptor [",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"pitchyin"})," is meant to be used with the ",(0,r.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = pitchyin(); ## generate pitchyin audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);