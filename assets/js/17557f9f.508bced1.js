"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7123],{20156:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"reference/buffer-analysis/temporalvariance","title":"temporalvariance","description":"temporalvariance","source":"@site/docs/reference/buffer-analysis/temporalvariance.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/temporalvariance","permalink":"/docs/reference/buffer-analysis/temporalvariance","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"analyze","permalink":"/docs/tags/analyze"},{"inline":true,"label":"inspect","permalink":"/docs/tags/inspect"}],"version":"current","frontMatter":{"hide_title":true,"tags":["analyze","inspect"]},"sidebar":"tutorialSidebar","previous":{"title":"temporalspread","permalink":"/docs/reference/buffer-analysis/temporalspread"},"next":{"title":"tonalkey","permalink":"/docs/reference/buffer-analysis/tonalkey"}}');var t=r(74848),s=r(28453);const i={hide_title:!0,tags:["analyze","inspect"]},l=void 0,o={},c=[{value:"<code>temporalvariance</code>",id:"temporalvariance",level:2},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"temporalvariance",children:(0,t.jsx)(n.code,{children:"temporalvariance"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",children:"temporalvariance() -> llll\n"})}),"\n",(0,t.jsx)(n.p,{children:"Generates an audio descriptor to compute the temporal variance of a buffer."}),"\n",(0,t.jsx)(n.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"temporalvariance"})}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"temporalvariance"})," is a mirror implementation of the same algorithm in the ",(0,t.jsx)(n.a,{href:"https://essentia.upf.edu/",children:"Essentia"})," library.\nFor more details on the algorithm, please check the ",(0,t.jsx)(n.a,{href:"https://essentia.upf.edu/algorithms_reference.html",children:"Essentia Algorithms reference"}),"."]})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,t.jsxs)(n.p,{children:["temporalvariance descriptor [",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"temporalvariance"})," is meant to be used with the ",(0,t.jsx)(n.code,{children:"analyze"})," function:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buffer = importaudio('singing.wav'); ## input buffer\n$descr = temporalvariance(); ## generate temporalvariance audio descriptor\n$buffer.inspect('before analysis');\n$buffer = $buffer.analyze($descr); ## apply analysis\n$buffer.inspect('after analysis')\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var a=r(96540);const t={},s=a.createContext(t);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);