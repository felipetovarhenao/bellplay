"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[2736],{8453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>i});var n=s(6540);const o={},t=n.createContext(o);function l(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(t.Provider,{value:r},e.children)}},9121:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"reference/buffer-operations/process","title":"process","description":"process","source":"@site/docs/reference/buffer-operations/process.md","sourceDirName":"reference/buffer-operations","slug":"/reference/buffer-operations/process","permalink":"/docs/reference/buffer-operations/process","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"power","permalink":"/docs/reference/buffer-operations/power"},"next":{"title":"rampsmooth","permalink":"/docs/reference/buffer-operations/rampsmooth"}}');var o=s(4848),t=s(8453);const l={hide_title:!0},i=void 0,c={},d=[{value:"<code>process</code>",id:"process",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const r={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"process",children:(0,o.jsx)(r.code,{children:"process"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bell",children:"process(\n    @buffer ? ## llll (required)\n    @operations ? ## llll (required)\n    @prefade 0\n    @keepkeys null\n) -> llll\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Applies a sequence of DSP operations to the input buffer, prior to rendering, via audio processing operations. These operations are generated through functions (e.g., see ",(0,o.jsx)(r.code,{children:"reverse"}),", ",(0,o.jsx)(r.code,{children:"paulstretch"}),", ",(0,o.jsx)(r.code,{children:"freeverb"}),", ",(0,o.jsx)(r.code,{children:"rubberband"}),"), which contain the parameters for that specific DSP operation. This results in a newly created buffer, with updated keys. To keep keys from the input buffer, such as keys associated with previous feature analyses, use the ",(0,o.jsx)(r.code,{children:"@keepkeys"})," argument by passing an optional list of keys. See ",(0,o.jsx)(r.code,{children:"@process"})," argument in ",(0,o.jsx)(r.code,{children:"render"}),"."]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"@buffer ?"})," [",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:"llll"})}),"]: buffer to process. (",(0,o.jsx)(r.em,{children:"required"}),")"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"@operations ?"})," [",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:"llll"})}),"]: list of audio process operations. (",(0,o.jsx)(r.em,{children:"required"}),")"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"@prefade"})," [",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:"llll/null"})}),"]: optional pre-fade amount, in milliseconds. (",(0,o.jsx)(r.em,{children:"default"}),": ",(0,o.jsx)(r.code,{children:"0"}),")."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"@keepkeys"})," [",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.strong,{children:"symbol/list/null"})}),"]: optional list of keys to keep from input buffer. (",(0,o.jsx)(r.em,{children:"default"}),": ",(0,o.jsx)(r.code,{children:"null"}),")."]}),"\n"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"output",children:"Output"}),"\n",(0,o.jsxs)(r.p,{children:["processed buffer [",(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.em,{children:"llll"})}),"]"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bell",metastring:"showLineNumbers",children:"## generate one or more processing operations\n$operations = (\n    reverse()\n    freeverb(@tail 1000)\n    reverse()\n);\n$buffer.inspect('before process');\n## apply operations to buffer\n$buffer = $buffer.process($operations);\n$buffer.inspect('after process')\n"})})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);