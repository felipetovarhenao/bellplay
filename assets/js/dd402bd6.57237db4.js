"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[1113],{3823:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/utilities/argsort","title":"argsort","description":"argsort","source":"@site/docs/reference/utilities/argsort.md","sourceDirName":"reference/utilities","slug":"/reference/utilities/argsort","permalink":"/docs/reference/utilities/argsort","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"addmarker","permalink":"/docs/reference/utilities/addmarker"},"next":{"title":"atodb","permalink":"/docs/reference/utilities/atodb"}}');var s=r(4848),l=r(8453);const i={hide_title:!0},o=void 0,c={},d=[{value:"<code>argsort</code>",id:"argsort",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"argsort",children:(0,s.jsx)(n.code,{children:"argsort"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bell",children:"argsort(\n    @x ?  ## llll (required)\n    @function null\n) -> llll\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns the indices that would sort an input llll in ascending order. Instead of returning a sorted version of the llll, it provides an index permutation that, when applied to the original llll, results in a sorted sequence."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@x ?"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"llll"})}),"]: llll to sort. (",(0,s.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"@function"})," [",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"function"})}),"]: optional lambda sorting function."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output"})}),"\n",(0,s.jsxs)(n.p,{children:["sorted indices [",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"llll"})}),"]"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const s={},l=t.createContext(s);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);