"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[4954],{8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var l=s(6540);const i={},r=l.createContext(i);function c(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),l.createElement(r.Provider,{value:n},e.children)}},8683:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>t});const l=JSON.parse('{"id":"reference/audio-processing/plus","title":"plus","description":"plus","source":"@site/docs/reference/audio-processing/plus.md","sourceDirName":"reference/audio-processing","slug":"/reference/audio-processing/plus","permalink":"/bellplay/docs/reference/audio-processing/plus","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"paulstretch","permalink":"/bellplay/docs/reference/audio-processing/paulstretch"},"next":{"title":"pong","permalink":"/bellplay/docs/reference/audio-processing/pong"}}');var i=s(4848),r=s(8453);const c={hide_title:!0},d=void 0,o={},t=[{value:"<code>plus</code>",id:"plus",level:2}];function h(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"plus",children:(0,i.jsx)(n.code,{children:"plus"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",children:"plus(\n    @operand ?  ## int/float/llll (required)\n    @resamplingfiltersize 11\n    @resamplingmode 'sinc'\n    @resamplingpolicy 3\n    @envtimeunit 2\n) -> llll\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Audio process operation for performing addition on a buffer. See ",(0,i.jsx)(n.code,{children:"process"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@operand ?"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float/llll"})}),"]: value to add to buffer, either as a single number, envelope, or buffer. (",(0,i.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingfiltersize"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: resampling filter size."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingmode"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"symbol"})}),"]: resampling mode.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'sinc'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'nearest neighbor'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'sample and hold'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'linear'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'quad'"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"'cubic'"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@resamplingpolicy"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: resampling policy.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": don't"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": to lowest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": to highest"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": to most common"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": to max. current"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@envtimeunit"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: envelope time unit.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output"})}),"\n",(0,i.jsxs)(n.p,{children:["plus operation [",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"llll"})}),"]"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);