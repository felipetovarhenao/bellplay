"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[7854],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var s=i(96540);const l={},r=s.createContext(l);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},40574:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"reference/buffer-analysis/analyze","title":"analyze","description":"analyze","source":"@site/docs/reference/buffer-analysis/analyze.md","sourceDirName":"reference/buffer-analysis","slug":"/reference/buffer-analysis/analyze","permalink":"/docs/reference/buffer-analysis/analyze","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"larm","permalink":"/docs/tags/larm"},{"inline":true,"label":"pitchmelodia","permalink":"/docs/tags/pitchmelodia"},{"inline":true,"label":"spectralcentroid","permalink":"/docs/tags/spectralcentroid"}],"version":"current","frontMatter":{"hide_title":true,"tags":["larm","pitchmelodia","spectralcentroid"]},"sidebar":"tutorialSidebar","previous":{"title":"11. Generating Keymaps","permalink":"/docs/learning/examples/keymaps"},"next":{"title":"barkbands","permalink":"/docs/reference/buffer-analysis/barkbands"}}');var l=i(74848),r=i(28453);const c={hide_title:!0,tags:["larm","pitchmelodia","spectralcentroid"]},d=void 0,h={},o=[{value:"<code>analyze</code>",id:"analyze",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Output",id:"output",level:3},{value:"Usage",id:"usage",level:3}];function t(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"analyze",children:(0,l.jsx)(n.code,{children:"analyze"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",children:"analyze(\n    @buffer ? ## llll (required)\n    @descriptors ? ## llll (required)\n    @winstartfromzero 0\n    @framesize 2048\n    @hopsize 1024\n    @numframes 'auto'\n    @overlap 1\n    @wintype 'hann'\n    @winnormalized 1\n    @envattack 10\n    @envrelease 100\n    @onsetdetectionmethod 'complex'\n    @peaksmaxnum 100\n    @peaksorderby 'complex'\n    @peaksmagthresh 0\n    @peaksmaxfreq 5000\n    @peaksminfreq 0\n    @summary 3\n    @summaryweight 1\n    @summarypositive 0\n    @ampunit 0\n    @antimeunit 1\n    @envtimeunit 0\n    @frequnit 0\n    @pitchunit 0\n    @timeunit 0\n    @yinmaxfreq 22050\n    @yinminfreq 20\n    @yintolerance 1\n    @frametime 0\n    @bufinterp 0\n) -> llll\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Applies a sequence of audio analysis operations to the input buffer, via audio descriptors. These descriptors are generated through functions (e.g., see ",(0,l.jsx)(n.code,{children:"flux"}),", ",(0,l.jsx)(n.code,{children:"dissonance"}),", ",(0,l.jsx)(n.code,{children:"spectrum"}),"), which contain the parameters for that specific audio analysis."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@buffer ?"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"llll"})}),"]: buffer to analyze. (",(0,l.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@descriptors ?"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"llll"})}),"]: list of audio descriptors. (",(0,l.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@winstartfromzero"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: center first window at ",(0,l.jsx)(n.code,{children:"@framesize / 2"})," instead of ",(0,l.jsx)(n.code,{children:"0"}),". (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@framesize"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: analysis frame size or window size. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"2048"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@hopsize"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: analysis hop size. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1024"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@numframes"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/symbol"})}),"]: number of analysis frames. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"'auto'"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'auto'"}),": infer from ",(0,l.jsx)(n.code,{children:"@framesize"})," and ",(0,l.jsx)(n.code,{children:"@hopsize"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:">0"}),": ignores ",(0,l.jsx)(n.code,{children:"@hopsize"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@overlap"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: overlap factor between analysis window size and hop size. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@wintype"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: window type (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"'hann'"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'rectangular'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'triangular'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'sine'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'hann'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'hamming'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'blackman'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'nuttall'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'blackmannuttall'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'blackmanharris'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'gaussian'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'sqrthann'"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"'sqrthamming'"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@winnormalized"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: normalize analysis windows to have an area of 1 and then scaled by a factor of 2. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@envattack"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: attack time for computing envelopes. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"10"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@envrelease"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: release time for computing envelopes. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"100"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@onsetdetectionmethod"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"symbol"})}),"]: onset detection method. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"'complex'"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'hfc'"}),": high frequency content."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'complex'"}),": the complex-domain spectral difference function."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'complex_phase'"}),": the simplified complex-domain spectral difference function taking into account phase changes, weighted by magnitude."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'flux'"}),": spectral flux."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'melflux'"}),": similar to spectral flux, but using half-rectified energy changes in Mel-frequency bands."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'rms'"}),": difference function, measuring the half-rectified change of the RMS of the magnitude spectrum."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@peaksmaxnum"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: maximum number of peaks for peaks analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"100"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@peaksorderby"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"symbol"})}),"]: ordering method of the peaks in the peaks analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"'complex'"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'hfc'"}),": high frequency content."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'complex'"}),": the complex-domain spectral difference function."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'complex_phase'"}),": the simplified complex-domain spectral difference function taking into account phase changes, weighted by magnitude."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'flux'"}),": spectral flux."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'melflux'"}),": similar to spectral flux, but using half-rectified energy changes in Mel-frequency bands."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"'rms'"}),": difference function, measuring the half-rectified change of the RMS of the magnitude spectrum."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@peaksmagthresh"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: magnitude threshold for the peaks analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@peaksmaxfreq"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: maximum frequency for the peaks analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"5000"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@peaksminfreq"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: minimum frequency for the peaks analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@summary"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: summarization mode, for global analyses that are computed on a frame-by-frame basis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"3"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": use first frame."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": use last frame."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": use middle frame."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": average through frames."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": median through frames."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"5"}),": mode through frames."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@summaryweight"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: summarization weight, when ",(0,l.jsx)(n.code,{children:"@summary"})," is ",(0,l.jsx)(n.code,{children:"4"}),". (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": none."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": rms."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": loudness."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@summarypositive"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: only summarize with positive values. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@ampunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: amplitude unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": linear"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": decibels"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@antimeunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: analysis time unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@envtimeunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: envelope time unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@frequnit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: frequency unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": Hertz"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": BPM"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": midicents"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": MIDI"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@pitchunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: pitch unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": midicents"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": MIDI"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": Hertz"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": ratio"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@timeunit"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: time unit. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": milliseconds"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": samples"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": duration ratio"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"3"}),": milliseconds difference"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"4"}),": samples difference"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@yinmaxfreq"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: maximum frequency for the YIN analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"22050"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@yinminfreq"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: minimum frequency for the YIN analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"20"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@yintolerance"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int/float"})}),"]: tolerance for the YIN analysis. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"1"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@frametime"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: retrieve analysis window time positions as a separate feature. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": off"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": on"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@bufinterp"})," [",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"int"})}),"]: interpolation mode. (",(0,l.jsx)(n.em,{children:"default"}),": ",(0,l.jsx)(n.code,{children:"0"}),").","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"0"}),": no interpolation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"1"}),": lower neighbor"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"2"}),": linear"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,l.jsxs)(n.p,{children:["analyzed buffer [",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.em,{children:"llll"})}),"]"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bell",metastring:"showLineNumbers",children:"## generate one or more audio descriptors\n$descriptors = (\n    larm()\n    pitchmelodia()\n    spectralcentroid()\n);\n$buffer.inspect('before analysis');\n## apply analysis to buffer\n$buffer = $buffer.analyze($descriptors);\n$buffer.inspect('after analysis')\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}}}]);