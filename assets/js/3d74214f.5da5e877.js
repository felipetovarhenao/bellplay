"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[2674],{61988:e=>{e.exports=JSON.parse('{"tag":{"label":"importaudio","permalink":"/docs/tags/importaudio","allTagsPath":"/docs/tags","count":18,"items":[{"id":"learning/examples/resynthesis","title":"1. Audio Resynthesis","description":"A simple demonstration of granular quasi-resynthesis via partial tracks, where an sound is used to guide the behavior of sinusoidal grains.","permalink":"/docs/learning/examples/resynthesis"},{"id":"learning/tutorials/bufferprocessing","title":"10. Buffer Processing","description":"One of the core features of bellplay~ is the ability to dynamically and flexibly apply chains of DSP algorithms to our buffers.","permalink":"/docs/learning/tutorials/bufferprocessing"},{"id":"learning/examples/keymaps","title":"11. Generating Keymaps","description":"This example automatically generates a custom keymap given a list of audio file paths:","permalink":"/docs/learning/examples/keymaps"},{"id":"learning/tutorials/postprocessing","title":"11. Post-rendering Processing","description":"Sometimes it can be more useful or desirable to apply processing to the entire output, instead of processing each buffer individually.","permalink":"/docs/learning/tutorials/postprocessing"},{"id":"learning/tutorials/bufferinspector","title":"14. Inspecting Buffers","description":"An essential part of writing code is being able to debug unwanted or unexpected behaviors.","permalink":"/docs/learning/tutorials/bufferinspector"},{"id":"learning/tutorials/analysis","title":"15. Audio Descriptors","description":"One of the core features in bellplay~ is our ability to analyze buffers to extract relevant information.","permalink":"/docs/learning/tutorials/analysis"},{"id":"learning/tutorials/analysismodes","title":"16. Audio Descriptor Modes","description":"When analyzing buffers, we can specify the output format for many of the available audio descriptors.","permalink":"/docs/learning/tutorials/analysismodes"},{"id":"learning/tutorials/features","title":"17. More Audio Features","description":"This tutorial provides an additional example for using buffer analysis features for audio processing.","permalink":"/docs/learning/tutorials/features"},{"id":"learning/tutorials/buildcorpus","title":"18. Audio corpora with SQL tables","description":"This tutorial demonstrates how to create an in-memory, queryable corpus of audio buffers by leveraging the createdbtable and querydb functions.","permalink":"/docs/learning/tutorials/buildcorpus"},{"id":"learning/tutorials/caching","title":"19. Caching Data","description":"In bellplay~, computation-heavy operations such as building large corpora, analyzing lots of audio data, and more, can be take a very long time, thus making it more tedious to experiment with our scripts every time we run them.","permalink":"/docs/learning/tutorials/caching"},{"id":"learning/examples/basicgranulation","title":"2. Basic Granulation","description":"An example of basic audio granulation, where short audio.","permalink":"/docs/learning/examples/basicgranulation"},{"id":"learning/tutorials/kdtree","title":"23. Feature-driven Sampling","description":"This tutorial shows how to build k-dimensional trees to efficiently perform feature-based search on buffers.","permalink":"/docs/learning/tutorials/kdtree"},{"id":"learning/tutorials/importingaudio","title":"3. Importing Audio","description":"In bellplay~ we can also generate buffers by importing our own audio files into our scripts.","permalink":"/docs/learning/tutorials/importingaudio"},{"id":"learning/examples/waveshaping","title":"4. Waveshaping Buffers","description":"A basic example of waveshaping in bellplay~, using a randomly generated breakpoint function.","permalink":"/docs/learning/examples/waveshaping"},{"id":"learning/examples/gliss","title":"5. Glissando texture","description":"An example of using time-varying resampling to generate a polyphonic texture.","permalink":"/docs/learning/examples/gliss"},{"id":"learning/tutorials/bufferkeys","title":"6. Buffer Keys","description":"As mentioned in earlier tutorials, buffers in bellplay~ are simply nested lists of key-value pairs.","permalink":"/docs/learning/tutorials/bufferkeys"},{"id":"learning/examples/temporalquantization","title":"8. Temporal Quantization","description":"A basic example of temporal quantization, where transient-based segments are temporally shifted to align with a rhythmic grid.","permalink":"/docs/learning/examples/temporalquantization"},{"id":"learning/examples/audiomosaic","title":"9. Audio Mosaicing","description":"An example of basic audio mosaicking in bellplay\\\\~, where a target audio file is reconstructed using segments drawn from a small audio corpus.","permalink":"/docs/learning/examples/audiomosaic"}],"unlisted":false}}')}}]);