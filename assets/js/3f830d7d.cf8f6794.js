"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[5678],{8372:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"reference/data-utilities/integrate","title":"integrate","description":"integrate","source":"@site/docs/reference/data-utilities/integrate.md","sourceDirName":"reference/data-utilities","slug":"/reference/data-utilities/integrate","permalink":"/docs/reference/data-utilities/integrate","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"inspect","permalink":"/docs/reference/data-utilities/inspect"},"next":{"title":"interrupt","permalink":"/docs/reference/data-utilities/interrupt"}}');var i=t(4848),s=t(8453);const l={hide_title:!0},o=void 0,c={},a=[{value:"<code>integrate</code>",id:"integrate",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"integrate",children:(0,i.jsx)(n.code,{children:"integrate"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bell",children:"integrate(\n    @llll ?  ## llll (required)\n    @numsamples 100\n    @order 1\n    @origin 0\n) -> llll\n"})}),"\n",(0,i.jsx)(n.p,{children:"Computes the integral of a breakpoint function. Note that the slope of the integrated break-point function is always 0, since the output function is always piecewise linear."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@llll ?"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"llll"})}),"]: list of integers. (",(0,i.jsx)(n.em,{children:"required"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@numsamples"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int"})}),"]: number of samples."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@order"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/list"})}),"]: order of the integration, i.e. the number of times the integration should be subsequently performed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@origin"})," [",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"int/float"})}),"]: initial value of the integral function. If the order of the integration is greater than one, one origin for each different integration step can be defined."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output"})}),"\n",(0,i.jsxs)(n.p,{children:["Integrated breakpoint function. [",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"llll"})}),"]"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);