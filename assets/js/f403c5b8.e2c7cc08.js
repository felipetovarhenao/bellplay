"use strict";(self.webpackChunkbellplay_docs=self.webpackChunkbellplay_docs||[]).push([[2664],{7445:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"reference/audio-analysis/spectralspread","title":"spectralspread","description":"spectralspread","source":"@site/docs/reference/audio-analysis/spectralspread.md","sourceDirName":"reference/audio-analysis","slug":"/reference/audio-analysis/spectralspread","permalink":"/bellplay/docs/reference/audio-analysis/spectralspread","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"spectralskewness","permalink":"/bellplay/docs/reference/audio-analysis/spectralskewness"},"next":{"title":"spectralvariance","permalink":"/bellplay/docs/reference/audio-analysis/spectralvariance"}}');var l=r(4848),c=r(8453);const a={hide_title:!0},t=void 0,i={},d=[{value:"<code>spectralspread</code>",id:"spectralspread",level:2}];function o(e){const s={code:"code",em:"em",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h2,{id:"spectralspread",children:(0,l.jsx)(s.code,{children:"spectralspread"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bell",children:"spectralspread(\n    @mode 0\n) -> llll\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Audio descriptor to compute the spectral spread of a buffer. See ",(0,l.jsx)(s.code,{children:"analyze"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"The resulting buffer will be updated with the following keys:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"'spectralspread'"})}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Which can be applied and accessed like so:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bell",metastring:"showLineNumbers",children:"$buf = $buf.analyze(spectralspread());\n$spectralspread = $buf.getkey('spectralspread')\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Arguments"}),":"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"@mode"})," [",(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:"int"})}),"]: analysis mode.","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"0"}),": global"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"1"}),": time series"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"2"}),": time-tagged time series"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"3"}),": buffer"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.strong,{children:"Output"})}),"\n",(0,l.jsxs)(s.p,{children:["spectralspread descriptor [",(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.em,{children:"llll"})}),"]"]})]})}function p(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>t});var n=r(6540);const l={},c=n.createContext(l);function a(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);