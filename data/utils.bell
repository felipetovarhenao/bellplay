msg = (
	$to, $msg -> (
		[$to $msg]
	)
);

query = (
	$x -> msg('db', 'query' $x)
);

loaddb = (
	$x -> msg('db', 'read' $x)
);

getsegments = (-> SEGMENTS);

addchord = (
	$x -> msg('roll', 'addchord' $x)
);

clipsegdur = (
	$seg, $dur -> (
		$x = flat($seg, 1);
		$x.'duration' = min($x.'duration', $dur);
		[ $x ]
	)
);

mapkey = (
	$x, $key, $fun -> (
		setkey($x, $key, $fun(getkey($x, $key)))
	)
);

bpf = (
	$pts, $curve = 0. -> (
		$N = length($pts);
		if $N == 1 then (
			$pts = flat($pts):1;
			[0 $pts 0] [ 1 $pts 0]
		) else (
			for $pt $i in $pts collect (
				$idx = ($i - 1.) / max($N - 1, 1);
				[(if depth($pt) > 1 then flat($pt) else $idx $pt) $curve]
			)
		)
	)
);

scale = (
	$x, $inmin = 0, $inmax = 1, $outmin = 0, $outmax = 1 -> (
		(($x - $inmin) / ($inmax - $inmin)) * ($outmax - $outmin) + $outmin
	)
);

frand = (
	$a = 1, $b = null -> (
		$x = random(0, 1000) / 1000.;
		if $b == null then (
			$min = 0;
			$max = $a
		) else (
			$min = $a;
			$max = $b
		);
		scale($x, 0, 1, $min, $max)
	)
);

pickrand = (
	$x, $n = 1 -> (
		for $i in 1...$n collect $x:(random(1, length($x)))
	)
);

clearroll = (-> msg('roll', 'clear'));

c2r = (
	$c -> 2 ** ($c / 1200)
);

r2c = (
	$r -> log2($r) * 1200
);

filtersegments = (
	$segs, $fun -> (
		$lambda = (
			$x  -^ $fun -> (
				$fun($x)
			)
		);
		finditems($segs, 0, $lambda, @maxdepth 1, @unwrap 1)
	)
);

seg2chord = (
	$segs, $onset = 0, $pan = null, $gain = null, $shift = 0, $rate = null -> (
		$notes = for $seg in $segs collect (
			$seg = flat($seg, 1);
			$file = [ 7 $seg.'file'];
			$offset = [ 10 $seg.'offset'];
			$pan = (if $pan then [ 2 $pan ] else null);
			$mc = $seg.'pitch';
			$gain = [1 $gain ||| bpf(0 127 127 0)];
			$rate = [11 ($rate ||| (if $shift && $shift != 1 then c2r($shift)))];
			$speed = $rate::(1 2);
			$color = $mc; 
			if $speed then (
				$mc += r2c($rate::(1 2))
			) else (
				$rate = null
			);
			$vel = minmax(flat($gain)):3;
			$color = [6 fmod(abs(($color - $mc) / 1200) + .5, 1)];
			$dur = $seg.'duration';
			[ $mc $dur $vel ['slots' $file $offset $pan $rate $gain $color]]
		);
		[ $onset $notes ]
	)
);

setkey = (
	$x, $key, $val -> (
		$x = flat($x, 1);
		$x.$key = $val;
		[ $x ]
	)
);

getkey = (
	$x, $key -> flat($x, 1).$key
);

compile = (-> msg('roll', 'dump'));

play = (-> msg('roll', 'play'));

mergechords = (
	$ms = 5, $mc = 0 -> (
		msg('roll', 'merge' $ms $mc)
	)
);

null