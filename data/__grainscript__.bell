msg = (
    $to, $msg -> (
        [$to $msg]
    )
);

setcorpus = (
    $x -> (
        SEGMENTS = null;
        msg("db", "read" $x)
    )
);

audioconfig = (
    $panmode = 0, $numchannels = 2, $sr = 48000, $normalize = 0 -> (
        msg("sampler", 
            [ "panmode" $panmode] 
            [ "numchannels" $numchannels ] 
            [ "sr" $sr ]
            [ "normalize" $normalize ]
        )
    )
);

sampletable = (
    $x, $i -> (
        $N = length($x);
        $i = scale($i, 0, 1, 1, $N);
        $l = floor($i);
        $r = min($l + 1, $N);
        $m = fmod($i, 1);
        $x:$l * (1 - $m) + $x:$r * $m
    )
);

query = (
    $x -> msg("db", "query" $x)
);

getsegments = (
    -> SEGMENTS
);

setkey = (
    $x, $key, $val -> (
        $x = $x::1;
        $x.$key = $val;
        [ $x ]
    )
);

getkey = (
    $x, $key -> ($x::1).$key
);

mapkey = (
    $x, $key, $fun -> (
        setkey($x, $key, $fun(getkey($x, $key)))
    )
);

bpf = (
    $pts, $curve = 0. -> (
        $N = length($pts);
        if $N == 1 then (
            $pts = flat($pts):1;
            [0 $pts 0] [ 1 $pts 0]
        ) else (
            for $pt $i in $pts collect (
                $idx = ($i - 1.) / max($N - 1, 1);
                [(if depth($pt) > 1 then flat($pt) else $idx $pt) $curve]
            )
        )
    )
);

scale = (
    $x, $inmin = 0, $inmax = 1, $outmin = 0, $outmax = 1 -> (
        (($x - $inmin) / ($inmax - $inmin)) * ($outmax - $outmin) + $outmin
    )
);

frand = (
    $a = 1, $b = null, $res = 1000 -> (
        if $b == null then (
            $min = 0;
            $max = $a
        ) else (
            $min = $a;
            $max = $b
        );
        scale(random(0, $res), 0, $res, $min, $max)
    )
);

choose = (
    $x, $n = 1 -> (
        for $i in 1...$n collect $x:(random(1, length($x)))
    )
);

resetroll = (-> msg("roll", "clear"));

c2r = (
    $c -> 2 ** ($c / 1200)
);

r2c = (
    $r -> log2($r) * 1200
);

filtersegments = (
    $segs, $fun, $max = 0, $maxdepth = 1, $unwrap = 1 -> (
        $lambda = (
            $x  -^ $fun -> (
                $fun($x)
            )
        );
        finditems($segs, $max, $lambda, @maxdepth $maxdepth, @unwrap $unwrap)
    )
);

getshift = (
    $seg, $mc -> (
        $mc - getkey($seg, "pitch")
    )
);

seg2chord = (
    $segs, $onset = 0, $pan = null, $gain = null, $shift = null -> (
        $notes = (
            for $seg in $segs collect (
                $seg = flat($seg, 1);
                $file = [ 7 $seg.'file'];
                $offset = [ 10 $seg.'offset'];
                $pan = (if $pan then [ 2 $pan ] else null);
                $mc = $seg.'pitch';
                $gain = [1 $gain ||| bpf(0 127 127 0)];
                $rate = [11 (if $shift && $shift != 0 then c2r($shift))];
                $color = $mc; 
                $speed = $rate::(1 2);
                if $speed then (
                    $mc += r2c($rate::(1 2))
                ) else (
                    $rate = null
                );
                $vel = minmax(flat($gain)):3;
                $color = [6 fmod(abs(($color - $mc) / 1200) + .5, 1)];
                $dur = $seg.'duration';
                [ $mc $dur $vel ['slots' $file $offset $pan $rate $gain $color]]
            )
        );
        [ $onset $notes ]
    )
);

addchord = (
    $x -> msg("roll", "addchord" $x)
);

render = (-> msg("roll", "dump"));

play = (-> msg("playtoggle", 1));

mergechords = (
    $ms = 5, $mc = 0 -> (
        msg("roll", "merge" $ms $mc)
    )
);

null