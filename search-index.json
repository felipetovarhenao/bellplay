[
  {
    "title": "`absolute`",
    "blurb": "Audio process operation for computing the absolute value of a buffer signal.",
    "keywords": [
      "absolute",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/absolute"
  },
  {
    "title": "`addmarker`",
    "blurb": "Inserts a marker into the transcription score, given an onset time and, optionally, a list of names and/or role associated with that marker.",
    "keywords": [
      "marker",
      "role",
      "names",
      "null",
      "onset"
    ],
    "path": "/docs/reference/data-utilities/addmarker"
  },
  {
    "title": "`analyze`",
    "blurb": "Applies a sequence of audio analysis operations to the input buffer, via audio descriptors.",
    "keywords": [
      "default",
      "analysis",
      "int",
      "difference",
      "descriptors"
    ],
    "path": "/docs/reference/buffer-analysis/analyze"
  },
  {
    "title": "`argsort`",
    "blurb": "Returns the indices that would sort an input llll in ascending order.",
    "keywords": [
      "llll",
      "function",
      "sorted",
      "argsort",
      "x"
    ],
    "path": "/docs/reference/data-utilities/argsort"
  },
  {
    "title": "`atodb`",
    "blurb": "Linear amplitude to decibels conversion.",
    "keywords": [
      "atodb",
      "required",
      "linear",
      "amplitude",
      "decibels"
    ],
    "path": "/docs/reference/data-utilities/atodb"
  },
  {
    "title": "`autoscale`",
    "blurb": "Applies auto-scaling normalization to a llll.",
    "keywords": [
      "llll",
      "normalization",
      "mode",
      "autoscale",
      "x"
    ],
    "path": "/docs/reference/data-utilities/autoscale"
  },
  {
    "title": "`barkbands`",
    "blurb": "Audio descriptor to compute the Bark bands of a spectrum.",
    "keywords": [
      "barkbands",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/barkbands"
  },
  {
    "title": "`beatsloudness`",
    "blurb": "Audio descriptor to compute the spectrum energy of beats in an audio signal given their positions.",
    "keywords": [
      "beatsloudness",
      "list",
      "buffer",
      "default",
      "beats"
    ],
    "path": "/docs/reference/buffer-analysis/beatsloudness"
  },
  {
    "title": "`bfcc`",
    "blurb": "Audio descriptor to compute the bark-frequency cepstrum coefficients of a spectrum.",
    "keywords": [
      "default",
      "int",
      "bfcc",
      "type",
      "analysis"
    ],
    "path": "/docs/reference/buffer-analysis/bfcc"
  },
  {
    "title": "`biquad`",
    "blurb": "Audio process operation for applying biquad filtering to a buffer.",
    "keywords": [
      "biquad",
      "process",
      "type",
      "buffer",
      "default"
    ],
    "path": "/docs/reference/buffer-operations/biquad"
  },
  {
    "title": "`bpf`",
    "blurb": "Formats an numeric list into a breakpoint function, in the form of [ `<x>` `<y>` `<slope>` ] tuples.",
    "keywords": [
      "null",
      "function",
      "list",
      "default",
      "bpf"
    ],
    "path": "/docs/reference/data-utilities/bpf"
  },
  {
    "title": "`buf2ptracks`",
    "blurb": "Converts a buffer into a partial track analysis.",
    "keywords": [
      "default",
      "int",
      "buffer",
      "analysis",
      "samples"
    ],
    "path": "/docs/reference/buffer-analysis/buf2ptracks"
  },
  {
    "title": "`buf2samps`",
    "blurb": "Buffer to samples conversion.",
    "keywords": [
      "buffer",
      "llll",
      "samples",
      "required",
      "true"
    ],
    "path": "/docs/reference/buffer-utilities/buf2samps"
  },
  {
    "title": "`c2r`",
    "blurb": "Cents to ratio conversion.",
    "keywords": [
      "cents",
      "required",
      "true",
      "bell",
      "ratio"
    ],
    "path": "/docs/reference/data-utilities/c2r"
  },
  {
    "title": "`choose`",
    "blurb": "Choose randomly one or more elements from a list, with optional probability weights.",
    "keywords": [
      "choose",
      "list",
      "weights",
      "choices",
      "required"
    ],
    "path": "/docs/reference/randomization/choose"
  },
  {
    "title": "`chordsdetection`",
    "blurb": "Audio descriptor to perform chord estimation on a buffer.",
    "keywords": [
      "chordsdetection",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/chordsdetection"
  },
  {
    "title": "`clicks`",
    "blurb": "Generates a buffer containing a set of clicks at specific onsets.",
    "keywords": [
      "default",
      "clicks",
      "onsets",
      "gains",
      "impulse"
    ],
    "path": "/docs/reference/buffer-generation/clicks"
  },
  {
    "title": "`clip`",
    "blurb": "Audio process operation for applying hard-clip distortion to a buffer.",
    "keywords": [
      "clip",
      "process",
      "buffer",
      "threshold",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/clip"
  },
  {
    "title": "`createtable`",
    "blurb": "Instantiates a [SQLite3](https://www.sqlitetutorial.net/) table given a list, where each element is expected to be a list of key-value pairs.",
    "keywords": [
      "data",
      "table",
      "events",
      "name",
      "createtable"
    ],
    "path": "/docs/reference/data-utilities/createtable"
  },
  {
    "title": "`createtree`",
    "blurb": "Creates a k-dimensional tree for optimized nearest-neighbor search of multidimensional data.",
    "keywords": [
      "data",
      "llll",
      "mode",
      "createtree",
      "required"
    ],
    "path": "/docs/reference/data-utilities/createtree"
  },
  {
    "title": "`crop`",
    "blurb": "Audio process operation for cropping a buffer.",
    "keywords": [
      "crop",
      "end",
      "process",
      "start",
      "buffer"
    ],
    "path": "/docs/reference/buffer-operations/crop"
  },
  {
    "title": "`cycle`",
    "blurb": "Generates a sinusoidal oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "phase",
      "default"
    ],
    "path": "/docs/reference/buffer-generation/cycle"
  },
  {
    "title": "`dbtoa`",
    "blurb": "Decibels to linear amplitude conversion.",
    "keywords": [
      "dbtoa",
      "db",
      "required",
      "decibels",
      "linear"
    ],
    "path": "/docs/reference/data-utilities/dbtoa"
  },
  {
    "title": "`dcfilter`",
    "blurb": "Audio process operation for removing DC offset from a buffer.",
    "keywords": [
      "dcfilter",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/dcfilter"
  },
  {
    "title": "`degrade`",
    "blurb": "Audio process operation for reducing sampling rate and bit-depth of a buffer.",
    "keywords": [
      "degrade",
      "process",
      "buffer",
      "ratio",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/degrade"
  },
  {
    "title": "`derive`",
    "blurb": "Computes the derivative of a breakpoint function.",
    "keywords": [
      "llll",
      "pad",
      "function",
      "order",
      "default"
    ],
    "path": "/docs/reference/data-utilities/derive"
  },
  {
    "title": "`dissonance`",
    "blurb": "Audio descriptor to compute the sensory dissonance of a buffer.",
    "keywords": [
      "dissonance",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/dissonance"
  },
  {
    "title": "`divide`",
    "blurb": "Audio process operation for performing division on a buffer.",
    "keywords": [
      "divide",
      "buffer",
      "process",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/divide"
  },
  {
    "title": "`dr2r`",
    "blurb": "Takes a list of ratios and an optional starting value, and returns the cumulative multiplication between adjacent elements, as a list.",
    "keywords": [
      "list",
      "dr",
      "required",
      "st",
      "ratios"
    ],
    "path": "/docs/reference/data-utilities/dr2r"
  },
  {
    "title": "`dx2x`",
    "blurb": "Takes a list of differences—i.e., deltas—and an optional starting value, and returns the cumulative sum between adjacent elements, as a list.",
    "keywords": [
      "list",
      "starting",
      "value",
      "dx",
      "required"
    ],
    "path": "/docs/reference/data-utilities/dx2x"
  },
  {
    "title": "`dynamics`",
    "blurb": "Audio process operation for applying simple compression to a buffer.",
    "keywords": [
      "default",
      "dynamics",
      "process",
      "ratio",
      "buffer"
    ],
    "path": "/docs/reference/buffer-operations/dynamics"
  },
  {
    "title": "`effectiveduration`",
    "blurb": "Audio descriptor to compute the effective duration of an envelope signal.",
    "keywords": [
      "effectiveduration",
      "envelope",
      "signal",
      "buffer",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/effectiveduration"
  },
  {
    "title": "`energy`",
    "blurb": "Audio descriptor to compute the energy of a buffer.",
    "keywords": [
      "energy",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/energy"
  },
  {
    "title": "`energyband`",
    "blurb": "Audio descriptor to compute energy in a given frequency band of a spectrum including both start and stop cutoff frequencies.",
    "keywords": [
      "energyband",
      "buffer",
      "int",
      "default",
      "analysis"
    ],
    "path": "/docs/reference/buffer-analysis/energyband"
  },
  {
    "title": "`envelope`",
    "blurb": "Generates an audio envelope as a buffer, given a single number or a breakpoint function.",
    "keywords": [
      "envelope",
      "duration",
      "llll",
      "single",
      "number"
    ],
    "path": "/docs/reference/buffer-generation/envelope"
  },
  {
    "title": "`envmaxtime`",
    "blurb": "Audio descriptor to extract the time at which the global maxima of the buffer's envelope occurs.",
    "keywords": [
      "envmaxtime",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/envmaxtime"
  },
  {
    "title": "`envmintime`",
    "blurb": "Audio descriptor to extract the time at which the global minima of the buffer's envelope occurs.",
    "keywords": [
      "envmintime",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/envmintime"
  },
  {
    "title": "`exists`",
    "blurb": "Checks if a file or folder exists.",
    "keywords": [
      "true",
      "exists",
      "path",
      "symbol",
      "required"
    ],
    "path": "/docs/reference/data-utilities/exists"
  },
  {
    "title": "`expand`",
    "blurb": "Modifies offset and duration of a buffer, such that it uses the full length of its reference buffer.",
    "keywords": [
      "buffer",
      "llll",
      "expand",
      "required",
      "true"
    ],
    "path": "/docs/reference/buffer-utilities/expand"
  },
  {
    "title": "`export`",
    "blurb": "Exports the rendered output as either an audio (`.wav`, `.aif`, `.aiff`, `.mp3`), MIDI (`.mid`,`.midi`), or roll (`.llll`) file, given a output path.",
    "keywords": [
      "bitrate",
      "default",
      "path",
      "symbol",
      "export"
    ],
    "path": "/docs/reference/data-utilities/export"
  },
  {
    "title": "`ezsampler`",
    "blurb": "Generates a buffer given pitch, duration, and velocity values, and an optional list representing a sampler key map.",
    "keywords": [
      "pitch",
      "velocity",
      "key",
      "default",
      "duration"
    ],
    "path": "/docs/reference/buffer-generation/ezsampler"
  },
  {
    "title": "`fade`",
    "blurb": "Audio process operation for applying fadein/fadeout to a buffer.",
    "keywords": [
      "default",
      "fade",
      "process",
      "buffer",
      "curve"
    ],
    "path": "/docs/reference/buffer-operations/fade"
  },
  {
    "title": "`flux`",
    "blurb": "Audio descriptor to compute the spectral flux of a buffer.",
    "keywords": [
      "flux",
      "buffer",
      "norm",
      "analysis",
      "mode"
    ],
    "path": "/docs/reference/buffer-analysis/flux"
  },
  {
    "title": "`fold`",
    "blurb": "Triangular function.",
    "keywords": [
      "fold",
      "x",
      "required",
      "number",
      "output"
    ],
    "path": "/docs/reference/data-utilities/fold"
  },
  {
    "title": "`freeverb`",
    "blurb": "Audio process operation for applying reverb to a buffer.",
    "keywords": [
      "default",
      "freeverb",
      "process",
      "tail",
      "buffer"
    ],
    "path": "/docs/reference/buffer-operations/freeverb"
  },
  {
    "title": "`freqshift`",
    "blurb": "Audio process operation for applying frequency shifting to a buffer.",
    "keywords": [
      "freqshift",
      "process",
      "buffer",
      "shift",
      "negative"
    ],
    "path": "/docs/reference/buffer-operations/freqshift"
  },
  {
    "title": "`fromdiffs`",
    "blurb": "Audio process operation to perform discrete integration of a buffer.",
    "keywords": [
      "fromdiffs",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/fromdiffs"
  },
  {
    "title": "`gain`",
    "blurb": "Audio process operation for modifying a buffer's gain.",
    "keywords": [
      "gain",
      "default",
      "process",
      "buffer",
      "int"
    ],
    "path": "/docs/reference/buffer-operations/gain"
  },
  {
    "title": "`gcd`",
    "blurb": "Computes the greatest common denominator of a list of integers.",
    "keywords": [
      "llll",
      "gcd",
      "required",
      "int",
      "greatest"
    ],
    "path": "/docs/reference/data-utilities/gcd"
  },
  {
    "title": "`getchannels`",
    "blurb": "Extracts one or more buffer channels as individual buffers.",
    "keywords": [
      "channels",
      "buffer",
      "llll",
      "getchannels",
      "required"
    ],
    "path": "/docs/reference/buffer-utilities/getchannels"
  },
  {
    "title": "`getchar`",
    "blurb": "Given a symbol and one or more indices, it returns the characters corresponding to each index.",
    "keywords": [
      "symbol",
      "required",
      "getchar",
      "indices",
      "characters"
    ],
    "path": "/docs/reference/data-utilities/getchar"
  },
  {
    "title": "`getkey`",
    "blurb": "Returns value associated with an llll key.",
    "keywords": [
      "llll",
      "key",
      "required",
      "getkey",
      "symbol"
    ],
    "path": "/docs/reference/data-utilities/getkey"
  },
  {
    "title": "`getmediafiles`",
    "blurb": "Returns a list of built-in media files in **bellplay~**.",
    "keywords": [
      "files",
      "list",
      "type",
      "null",
      "media"
    ],
    "path": "/docs/reference/data-utilities/getmediafiles"
  },
  {
    "title": "`groove`",
    "blurb": "Audio processing operation for applying variable-rate sample playback to a buffer.",
    "keywords": [
      "buffer",
      "groove",
      "rate",
      "process",
      "duration"
    ],
    "path": "/docs/reference/buffer-operations/groove"
  },
  {
    "title": "`hanning`",
    "blurb": "Generates a hanning window as a numeric list.",
    "keywords": [
      "hanning",
      "length",
      "list",
      "window",
      "true"
    ],
    "path": "/docs/reference/data-utilities/hanning"
  },
  {
    "title": "`hoadecode`",
    "blurb": "Audio process operation for decoding higher-order ambisonic buffers for a set of loudspeakers or for binaural listening\n\n---",
    "keywords": [
      "default",
      "hoadecode",
      "binaural",
      "process",
      "azimuth"
    ],
    "path": "/docs/reference/buffer-operations/hoadecode"
  },
  {
    "title": "`hoaencode`",
    "blurb": "Audio process operation for panning the input buffer and encode it as a higher-order ambisonic buffer\n\n---",
    "keywords": [
      "default",
      "azimuth",
      "buffer",
      "hoaencode",
      "elevation"
    ],
    "path": "/docs/reference/buffer-operations/hoaencode"
  },
  {
    "title": "`importaudio`",
    "blurb": "Imports an audio file (`.wav`, `.aif`, `.aiff`, `.mp3`) as a buffer, given a file path.",
    "keywords": [
      "path",
      "file",
      "buffer",
      "importaudio",
      "symbol"
    ],
    "path": "/docs/reference/buffer-generation/importaudio"
  },
  {
    "title": "`importmidi`",
    "blurb": "Imports a midi file, as a list of events, each with the following keys:",
    "keywords": [
      "path",
      "midi",
      "importmidi",
      "symbol",
      "required"
    ],
    "path": "/docs/reference/data-utilities/importmidi"
  },
  {
    "title": "`inharmonicity`",
    "blurb": "Audio descriptor to calculate the inharmonicity of a buffer.",
    "keywords": [
      "inharmonicity",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/inharmonicity"
  },
  {
    "title": "`initurn`",
    "blurb": "Initializes a new unique random number generator (URN), given a size and a URN identifier.",
    "keywords": [
      "urn",
      "random",
      "unique",
      "identifier",
      "size"
    ],
    "path": "/docs/reference/randomization/initurn"
  },
  {
    "title": "`inspect`",
    "blurb": "Adds input buffer to the buffer inspector window, which opens up once the script evaluation is over, displaying relevant buffer information—useful for debugging buffers.",
    "keywords": [
      "buffer",
      "llll",
      "label",
      "inspect",
      "required"
    ],
    "path": "/docs/reference/data-utilities/inspect"
  },
  {
    "title": "`integrate`",
    "blurb": "Computes the integral of a breakpoint function.",
    "keywords": [
      "llll",
      "function",
      "order",
      "integration",
      "origin"
    ],
    "path": "/docs/reference/data-utilities/integrate"
  },
  {
    "title": "`interrupt`",
    "blurb": "Disables communication between the current script and the **bellplay~** application, interrupting any backend-dependent operations.",
    "keywords": [
      "print",
      "null",
      "interrupt",
      "gate",
      "bell"
    ],
    "path": "/docs/reference/data-utilities/interrupt"
  },
  {
    "title": "`isnan`",
    "blurb": "Checks if the input argument is strictly a nan—i.e., 'not a number'—value.",
    "keywords": [
      "true",
      "isnan",
      "x",
      "anything",
      "required"
    ],
    "path": "/docs/reference/data-utilities/isnan"
  },
  {
    "title": "`join`",
    "blurb": "Audio process operation for concatenating one or more buffers to the processed buffer.",
    "keywords": [
      "default",
      "join",
      "buffers",
      "buffer",
      "process"
    ],
    "path": "/docs/reference/buffer-operations/join"
  },
  {
    "title": "`larm`",
    "blurb": "Audio descriptor to estimate the long-term loudness of a buffer.",
    "keywords": [
      "larm",
      "buffer",
      "default",
      "int",
      "time"
    ],
    "path": "/docs/reference/buffer-analysis/larm"
  },
  {
    "title": "`lcm`",
    "blurb": "Computes the least common multiple of a list of integers.",
    "keywords": [
      "llll",
      "lcm",
      "required",
      "int",
      "least"
    ],
    "path": "/docs/reference/data-utilities/lcm"
  },
  {
    "title": "`logattack`",
    "blurb": "Audio descriptor to compute the log (base 10) of the attack time of buffer's envelope.",
    "keywords": [
      "logattack",
      "buffer",
      "attack",
      "descriptor",
      "time"
    ],
    "path": "/docs/reference/buffer-analysis/logattack"
  },
  {
    "title": "`mapkey`",
    "blurb": "Modifies an existing `llll` key via a lambda function.",
    "keywords": [
      "llll",
      "required",
      "key",
      "lambda",
      "function"
    ],
    "path": "/docs/reference/data-utilities/mapkey"
  },
  {
    "title": "`markov2seq`",
    "blurb": "Generates a sequence using a given Markov transition matrix.",
    "keywords": [
      "sequence",
      "matrix",
      "state",
      "default",
      "llll"
    ],
    "path": "/docs/reference/data-utilities/markov2seq"
  },
  {
    "title": "`maxmagfreq`",
    "blurb": "Audio descriptor to compute the frequency with the largest magnitude in a spectrum.",
    "keywords": [
      "maxmagfreq",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/maxmagfreq"
  },
  {
    "title": "`mc2chroma`",
    "blurb": "Midicents to chroma vector conversion.",
    "keywords": [
      "llll",
      "chroma",
      "vector",
      "mc",
      "required"
    ],
    "path": "/docs/reference/data-utilities/mc2chroma"
  },
  {
    "title": "`mc2pc`",
    "blurb": "midicent to pitch class conversion.",
    "keywords": [
      "mc",
      "required",
      "pitch",
      "true",
      "bell"
    ],
    "path": "/docs/reference/data-utilities/mc2pc"
  },
  {
    "title": "`mean`",
    "blurb": "Returns the mean value of a numeric list.",
    "keywords": [
      "mean",
      "list",
      "weights",
      "x",
      "required"
    ],
    "path": "/docs/reference/data-utilities/mean"
  },
  {
    "title": "`median`",
    "blurb": "Returns the median element of a numeric list.",
    "keywords": [
      "median",
      "list",
      "x",
      "required",
      "element"
    ],
    "path": "/docs/reference/data-utilities/median"
  },
  {
    "title": "`mfcc`",
    "blurb": "Audio descriptor to compute the mel-frequency cepstrum coefficients of a buffer's spectrum.",
    "keywords": [
      "default",
      "int",
      "mfcc",
      "type",
      "buffer"
    ],
    "path": "/docs/reference/buffer-analysis/mfcc"
  },
  {
    "title": "`minus`",
    "blurb": "Audio process operation for performing subtraction on a buffer.",
    "keywords": [
      "buffer",
      "minus",
      "process",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/minus"
  },
  {
    "title": "`mix`",
    "blurb": "Audio process operation for mixing multiple buffers.",
    "keywords": [
      "default",
      "mix",
      "int",
      "buffers",
      "process"
    ],
    "path": "/docs/reference/buffer-operations/mix"
  },
  {
    "title": "`mixdown`",
    "blurb": "Audio process operation for mixing down (or up) the number of channels of a buffer.",
    "keywords": [
      "channels",
      "process",
      "mixdown",
      "buffer",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/mixdown"
  },
  {
    "title": "`multiply`",
    "blurb": "Audio process operation for performing multiplication on a buffer.",
    "keywords": [
      "multiply",
      "buffer",
      "process",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/multiply"
  },
  {
    "title": "`nearest`",
    "blurb": "Given a target number, finds the nearest value in a numeric list via binary search.",
    "keywords": [
      "list",
      "nearest",
      "required",
      "target",
      "value"
    ],
    "path": "/docs/reference/data-utilities/nearest"
  },
  {
    "title": "`noise`",
    "blurb": "Generates white noise as a buffer.",
    "keywords": [
      "noise",
      "duration",
      "buffer",
      "llll",
      "true"
    ],
    "path": "/docs/reference/buffer-generation/noise"
  },
  {
    "title": "`normalize`",
    "blurb": "Audio process operation for normalizing the amplitude of a buffer.",
    "keywords": [
      "normalize",
      "process",
      "level",
      "buffer",
      "default"
    ],
    "path": "/docs/reference/buffer-operations/normalize"
  },
  {
    "title": "`octreduce`",
    "blurb": "Reduces ratios to fit within the 1-2 range.",
    "keywords": [
      "ratios",
      "octreduce",
      "required",
      "true",
      "bell"
    ],
    "path": "/docs/reference/data-utilities/octreduce"
  },
  {
    "title": "`onepole`",
    "blurb": "Audio process operation for applying single-pole lowpass or highpass filtering to a buffer.",
    "keywords": [
      "onepole",
      "process",
      "highpass",
      "buffer",
      "cutoff"
    ],
    "path": "/docs/reference/buffer-operations/onepole"
  },
  {
    "title": "`onsetdetection`",
    "blurb": "Audio descriptor to compute buffer onsets, given various onset detection functions.",
    "keywords": [
      "onsetdetection",
      "buffer",
      "spectral",
      "function",
      "analysis"
    ],
    "path": "/docs/reference/buffer-analysis/onsetdetection"
  },
  {
    "title": "`onsets`",
    "blurb": "Audio descriptor to compute the onset positions in a buffer.",
    "keywords": [
      "onsets",
      "buffer",
      "default",
      "descriptor",
      "float"
    ],
    "path": "/docs/reference/buffer-analysis/onsets"
  },
  {
    "title": "`overdrive`",
    "blurb": "Audio process operation for applying soft-clip distortion to a buffer.",
    "keywords": [
      "overdrive",
      "process",
      "buffer",
      "factor",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/overdrive"
  },
  {
    "title": "`panning`",
    "blurb": "Audio process operation for applying 1-D panning to a buffer.",
    "keywords": [
      "panning",
      "default",
      "int",
      "process",
      "buffer"
    ],
    "path": "/docs/reference/buffer-operations/panning"
  },
  {
    "title": "`parsepath`",
    "blurb": "Parses a given path into key-value pairs for the following properties:",
    "keywords": [
      "path",
      "file",
      "folder",
      "parsepath",
      "symbol"
    ],
    "path": "/docs/reference/data-utilities/parsepath"
  },
  {
    "title": "`paulfreeze`",
    "blurb": "Audio process operation for freezing a buffer.",
    "keywords": [
      "default",
      "paulfreeze",
      "process",
      "buffer",
      "duration"
    ],
    "path": "/docs/reference/buffer-operations/paulfreeze"
  },
  {
    "title": "`paulstretch`",
    "blurb": "Audio process operation for applying time-stretching to a buffer.",
    "keywords": [
      "stretching",
      "paulstretch",
      "process",
      "default",
      "samples"
    ],
    "path": "/docs/reference/buffer-operations/paulstretch"
  },
  {
    "title": "`pcdiff`",
    "blurb": "Signed pitch class difference.",
    "keywords": [
      "required",
      "pitch",
      "pcdiff",
      "b",
      "mod"
    ],
    "path": "/docs/reference/data-utilities/pcdiff"
  },
  {
    "title": "`phasor`",
    "blurb": "Generates a unipolar ramp oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "phase",
      "default"
    ],
    "path": "/docs/reference/buffer-generation/phasor"
  },
  {
    "title": "`pitchdiff`",
    "blurb": "Given a list of target midicents and/or pitch classes, returns the signed difference between a pitch in midicents and the nearest midicent/pitch class target.",
    "keywords": [
      "required",
      "pitch",
      "targets",
      "target",
      "midicents"
    ],
    "path": "/docs/reference/data-utilities/pitchdiff"
  },
  {
    "title": "`pitchmelodia`",
    "blurb": "Audio descriptor to estimate the fundamental frequency corresponding to the melody of a monophonic music signal based on the MELODIA algorithm.",
    "keywords": [
      "default",
      "int",
      "pitch",
      "salience",
      "pitchmelodia"
    ],
    "path": "/docs/reference/buffer-analysis/pitchmelodia"
  },
  {
    "title": "`pitchyin`",
    "blurb": "Audio descriptor to estimate the fundamental frequency of a monophonic buffer.",
    "keywords": [
      "default",
      "pitchyin",
      "buffer",
      "int",
      "analysis"
    ],
    "path": "/docs/reference/buffer-analysis/pitchyin"
  },
  {
    "title": "`plus`",
    "blurb": "Audio process operation for performing addition on a buffer.",
    "keywords": [
      "buffer",
      "plus",
      "process",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/plus"
  },
  {
    "title": "`pong`",
    "blurb": "Audio process operation for applying range limiting to a buffer.",
    "keywords": [
      "buffer",
      "pong",
      "process",
      "low",
      "high"
    ],
    "path": "/docs/reference/buffer-operations/pong"
  },
  {
    "title": "`power`",
    "blurb": "Audio process operation for performing exponentiation on a buffer.",
    "keywords": [
      "buffer",
      "power",
      "process",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/power"
  },
  {
    "title": "`process`",
    "blurb": "Applies a sequence of DSP operations to the input buffer, prior to rendering, via audio processing operations.",
    "keywords": [
      "buffer",
      "operations",
      "process",
      "llll",
      "keys"
    ],
    "path": "/docs/reference/buffer-operations/process"
  },
  {
    "title": "`ptracks2buf`",
    "blurb": "Converts a partial track analysis into a buffer.",
    "keywords": [
      "llll",
      "required",
      "int",
      "default",
      "unit"
    ],
    "path": "/docs/reference/buffer-generation/ptracks2buf"
  },
  {
    "title": "`querytable`",
    "blurb": "Performs a [SQLite3](https://www.sqlitetutorial.net/) query on previously created tables.",
    "keywords": [
      "events",
      "sql",
      "query",
      "results",
      "querytable"
    ],
    "path": "/docs/reference/data-utilities/querytable"
  },
  {
    "title": "`querytree`",
    "blurb": "Given a k-dimensional tree and a target point with the same dimensionality, returns the index position of the nearest neighbor in that tree.",
    "keywords": [
      "tree",
      "llll",
      "required",
      "point",
      "nearest"
    ],
    "path": "/docs/reference/data-utilities/querytree"
  },
  {
    "title": "`r2c`",
    "blurb": "Ratio to cents conversion.",
    "keywords": [
      "ratios",
      "required",
      "cents",
      "true",
      "bell"
    ],
    "path": "/docs/reference/data-utilities/r2c"
  },
  {
    "title": "`r2dr`",
    "blurb": "Takes a list of ratios or factors and returns the quotients between adjacent elements.",
    "keywords": [
      "list",
      "r",
      "required",
      "ratios",
      "quotients"
    ],
    "path": "/docs/reference/data-utilities/r2dr"
  },
  {
    "title": "`r2mc`",
    "blurb": "Ratio to midicent conversion.",
    "keywords": [
      "ratios",
      "required",
      "mc",
      "midicents",
      "true"
    ],
    "path": "/docs/reference/data-utilities/r2mc"
  },
  {
    "title": "`r2pc`",
    "blurb": "Ratio to pitch class conversion, assuming octave equivalence.",
    "keywords": [
      "ratios",
      "pitch",
      "required",
      "pc",
      "class"
    ],
    "path": "/docs/reference/data-utilities/r2pc"
  },
  {
    "title": "`rampsmooth`",
    "blurb": "Audio process operation for applying rampsmoothing to a buffer.",
    "keywords": [
      "buffer",
      "rampsmooth",
      "process",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/rampsmooth"
  },
  {
    "title": "`rand`",
    "blurb": "Random floating point number generator.",
    "keywords": [
      "b",
      "null",
      "value",
      "rand",
      "random"
    ],
    "path": "/docs/reference/randomization/rand"
  },
  {
    "title": "`randosc`",
    "blurb": "Generates a random oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "randosc",
      "llll"
    ],
    "path": "/docs/reference/buffer-generation/randosc"
  },
  {
    "title": "`read`",
    "blurb": "Read `.txt` or native `.llll` data.",
    "keywords": [
      "ignore",
      "symbols",
      "read",
      "parens",
      "keep"
    ],
    "path": "/docs/reference/data-utilities/read"
  },
  {
    "title": "`readfolder`",
    "blurb": "Returns a list of file paths in specified folder directory.",
    "keywords": [
      "list",
      "files",
      "readfolder",
      "path",
      "symbol"
    ],
    "path": "/docs/reference/data-utilities/readfolder"
  },
  {
    "title": "`rect`",
    "blurb": "Generates a bipolar, anti-aliased rectangular (pulse) oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "duty",
      "default"
    ],
    "path": "/docs/reference/buffer-generation/rect"
  },
  {
    "title": "`render`",
    "blurb": "Triggers audio rendering of all transcribed buffers via `transcribe`, and returns the rendered buffer.",
    "keywords": [
      "default",
      "int",
      "audio",
      "process",
      "buffer"
    ],
    "path": "/docs/reference/buffer-utilities/render"
  },
  {
    "title": "`repeat`",
    "blurb": "Audio process operation for repeating a buffer.",
    "keywords": [
      "repeat",
      "duration",
      "process",
      "buffer",
      "timeunit"
    ],
    "path": "/docs/reference/buffer-operations/repeat"
  },
  {
    "title": "`resample`",
    "blurb": "Audio process operation for applying stretching/pitch shifting a buffer via resampling.",
    "keywords": [
      "duration",
      "default",
      "resample",
      "process",
      "buffer"
    ],
    "path": "/docs/reference/buffer-operations/resample"
  },
  {
    "title": "`retune`",
    "blurb": "Audio process operation for applying autotune-like pitch retuning to a buffer.",
    "keywords": [
      "retune",
      "pitch",
      "default",
      "threshold",
      "process"
    ],
    "path": "/docs/reference/buffer-operations/retune"
  },
  {
    "title": "`revbpf`",
    "blurb": "Reverses a breakpoint function.",
    "keywords": [
      "llll",
      "bpf",
      "breakpoint",
      "function",
      "revbpf"
    ],
    "path": "/docs/reference/data-utilities/revbpf"
  },
  {
    "title": "`reverse`",
    "blurb": "Audio process operation for reversing a buffer.",
    "keywords": [
      "reverse",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/reverse"
  },
  {
    "title": "`rhythm`",
    "blurb": "Audio descriptor for extract the beat positions and estimate their confidence as well as tempo in bpm for a buffer.",
    "keywords": [
      "rhythm",
      "method",
      "buffer",
      "descriptor",
      "tempo"
    ],
    "path": "/docs/reference/buffer-analysis/rhythm"
  },
  {
    "title": "`rolloff`",
    "blurb": "Audio descriptor to compute the roll-off frequency of a spectrum.",
    "keywords": [
      "rolloff",
      "frequency",
      "buffer",
      "analysis",
      "mode"
    ],
    "path": "/docs/reference/buffer-analysis/rolloff"
  },
  {
    "title": "`rounding`",
    "blurb": "Audio process operation for applying signal rounding to a buffer.",
    "keywords": [
      "rounding",
      "process",
      "buffer",
      "value",
      "nearest"
    ],
    "path": "/docs/reference/buffer-operations/rounding"
  },
  {
    "title": "`rubberband`",
    "blurb": "Audio process operation for applying rubberband pitch-shifting/time-stretching to a buffer.",
    "keywords": [
      "default",
      "int",
      "rubberband",
      "stretching",
      "process"
    ],
    "path": "/docs/reference/buffer-operations/rubberband"
  },
  {
    "title": "`samplebpf`",
    "blurb": "Samples an interpolated value from a breakpoint function, given a list of normalized indices.",
    "keywords": [
      "bpf",
      "required",
      "function",
      "samplebpf",
      "llll"
    ],
    "path": "/docs/reference/data-utilities/samplebpf"
  },
  {
    "title": "`samplelist`",
    "blurb": "Samples an interpolated value from a numeric list given a normalized index.",
    "keywords": [
      "list",
      "required",
      "samplelist",
      "x",
      "interpolated"
    ],
    "path": "/docs/reference/data-utilities/samplelist"
  },
  {
    "title": "`samps2buf`",
    "blurb": "Samples to buffer conversion.",
    "keywords": [
      "llll",
      "buffer",
      "required",
      "sr",
      "samples"
    ],
    "path": "/docs/reference/buffer-utilities/samps2buf"
  },
  {
    "title": "`saw`",
    "blurb": "Generates a bipolar, anti-aliased sawtooth oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "saw",
      "llll"
    ],
    "path": "/docs/reference/buffer-generation/saw"
  },
  {
    "title": "`scale`",
    "blurb": "Scales an input value or list from a given range to another, with optional slope for non-linear scaling.",
    "keywords": [
      "value",
      "slope",
      "default",
      "input",
      "scale"
    ],
    "path": "/docs/reference/data-utilities/scale"
  },
  {
    "title": "`scaling`",
    "blurb": "Audio process operation for applying amplitude scaling to a buffer.",
    "keywords": [
      "scaling",
      "process",
      "buffer",
      "value",
      "default"
    ],
    "path": "/docs/reference/buffer-operations/scaling"
  },
  {
    "title": "`scoreconfig`",
    "blurb": "Configures the score appearance, such as the clefs, voice names, tone division, etc.",
    "keywords": [
      "clef",
      "treble",
      "bass",
      "default",
      "voice"
    ],
    "path": "/docs/reference/data-utilities/scoreconfig"
  },
  {
    "title": "`scrub`",
    "blurb": "Audio process operation for scrubbing through a buffer.",
    "keywords": [
      "buffer",
      "scrub",
      "process",
      "phase",
      "duration"
    ],
    "path": "/docs/reference/buffer-operations/scrub"
  },
  {
    "title": "`seq2markov`",
    "blurb": "Constructs a Markov chain from a given sequence of data.",
    "keywords": [
      "sequence",
      "llll",
      "symbol",
      "order",
      "markov"
    ],
    "path": "/docs/reference/data-utilities/seq2markov"
  },
  {
    "title": "`setkey`",
    "blurb": "Sets the value of a given key in a `llll`.",
    "keywords": [
      "llll",
      "required",
      "key",
      "mode",
      "values"
    ],
    "path": "/docs/reference/data-utilities/setkey"
  },
  {
    "title": "`setseed`",
    "blurb": "Sets the random seed for the `xrand`, `xrandom`, `xchoose`, `xscramble`, and `urn` functions.",
    "keywords": [
      "seed",
      "setseed",
      "int",
      "required",
      "random"
    ],
    "path": "/docs/reference/data-utilities/setseed"
  },
  {
    "title": "`sortbykeys`",
    "blurb": "Sorts `llll` elements by a given set of keys.",
    "keywords": [
      "llll",
      "keys",
      "required",
      "list",
      "sortbykeys"
    ],
    "path": "/docs/reference/data-utilities/sortbykeys"
  },
  {
    "title": "`soundtouch`",
    "blurb": "Audio process operation for applying soundtouch pitch-shifting/time-stretching to a buffer.",
    "keywords": [
      "default",
      "soundtouch",
      "process",
      "int",
      "stretching"
    ],
    "path": "/docs/reference/buffer-operations/soundtouch"
  },
  {
    "title": "`spectralcentroid`",
    "blurb": "Audio descriptor to calculate the spectral centroid of a buffer, defined as the 'center of mass' of the spectrum, in Hertz.",
    "keywords": [
      "spectralcentroid",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralcentroid"
  },
  {
    "title": "`spectralflatness`",
    "blurb": "Audio descriptor to calculate the spectral flatness of a buffer, defined as the ratio between the spectrum's geometric mean and arithmetic mean.",
    "keywords": [
      "spectralflatness",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralflatness"
  },
  {
    "title": "`spectralkurtosis`",
    "blurb": "Audio descriptor to compute the spectral kurtosis of a buffer.",
    "keywords": [
      "spectralkurtosis",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralkurtosis"
  },
  {
    "title": "`spectralskewness`",
    "blurb": "Audio descriptor to compute the spectral skewness of a buffer.",
    "keywords": [
      "spectralskewness",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralskewness"
  },
  {
    "title": "`spectralspread`",
    "blurb": "Audio descriptor to compute the spectral spread of a buffer.",
    "keywords": [
      "spectralspread",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralspread"
  },
  {
    "title": "`spectralvariance`",
    "blurb": "Audio descriptor to compute the spectral variance of a buffer.",
    "keywords": [
      "spectralvariance",
      "buffer",
      "analysis",
      "mode",
      "descriptor"
    ],
    "path": "/docs/reference/buffer-analysis/spectralvariance"
  },
  {
    "title": "`spectrum`",
    "blurb": "Audio descriptor to compute the magnitude spectrum of a buffer.",
    "keywords": [
      "spectrum",
      "buffer",
      "size",
      "analysis",
      "mode"
    ],
    "path": "/docs/reference/buffer-analysis/spectrum"
  },
  {
    "title": "`splitbuf`",
    "blurb": "Splits a buffer into multiple segments.",
    "keywords": [
      "split",
      "mode",
      "buffer",
      "llll",
      "segment"
    ],
    "path": "/docs/reference/buffer-utilities/splitbuf"
  },
  {
    "title": "`squareroot`",
    "blurb": "Audio process operation for computing the square root of a buffer signal.",
    "keywords": [
      "squareroot",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/squareroot"
  },
  {
    "title": "`strongdecay`",
    "blurb": "Audio descriptor to compute the strong decay of a buffer.",
    "keywords": [
      "strongdecay",
      "buffer",
      "strong",
      "signal",
      "analysis"
    ],
    "path": "/docs/reference/buffer-analysis/strongdecay"
  },
  {
    "title": "`strongpeak`",
    "blurb": "Audio descriptor to compute the strong peak of a buffer, defined as the ratio between the spectrum's maximum peak's magnitude and the 'bandwidth' of the peak above a threshold—i.e., half its amplitude.",
    "keywords": [
      "strongpeak",
      "buffer",
      "peak",
      "analysis",
      "mode"
    ],
    "path": "/docs/reference/buffer-analysis/strongpeak"
  },
  {
    "title": "`symlen`",
    "blurb": "Returns the length of symbol.",
    "keywords": [
      "symbol",
      "length",
      "symlen",
      "required",
      "int"
    ],
    "path": "/docs/reference/data-utilities/symlen"
  },
  {
    "title": "`teeth`",
    "blurb": "Audio process operation for applying comb filtering to a buffer, with feedforward and feedback delay control.",
    "keywords": [
      "buffer",
      "teeth",
      "feedforward",
      "feedback",
      "gain"
    ],
    "path": "/docs/reference/buffer-operations/teeth"
  },
  {
    "title": "`temporalcentroid`",
    "blurb": "Audio descriptor to calculate the temporal centroid of a buffer, defined as the point in time that is a temporal balancing point of the sound's energy.",
    "keywords": [
      "temporalcentroid",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalcentroid"
  },
  {
    "title": "`temporalflatness`",
    "blurb": "Audio descriptor to calculate the temporal flatness of a buffer, defined as the ratio between the buffer envelope's geometric mean and arithmetic mean.",
    "keywords": [
      "temporalflatness",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalflatness"
  },
  {
    "title": "`temporalkurtosis`",
    "blurb": "Audio descriptor to compute the temporal kurtosis of a buffer.",
    "keywords": [
      "temporalkurtosis",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalkurtosis"
  },
  {
    "title": "`temporalskewness`",
    "blurb": "Audio descriptor to compute the temporal skewness of a buffer.",
    "keywords": [
      "temporalskewness",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalskewness"
  },
  {
    "title": "`temporalspread`",
    "blurb": "Audio descriptor to compute the temporal spread of a buffer.",
    "keywords": [
      "temporalspread",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalspread"
  },
  {
    "title": "`temporalvariance`",
    "blurb": "Audio descriptor to compute the temporal variance of a buffer.",
    "keywords": [
      "temporalvariance",
      "buffer",
      "descriptor",
      "analysis",
      "bell"
    ],
    "path": "/docs/reference/buffer-analysis/temporalvariance"
  },
  {
    "title": "`thispath`",
    "blurb": "Returns the path of the current script, as either a symbol or a parsed `llll` path.",
    "keywords": [
      "path",
      "parse",
      "llll",
      "thispath",
      "current"
    ],
    "path": "/docs/reference/data-utilities/thispath"
  },
  {
    "title": "`timesquash`",
    "blurb": "Audio process operation for applying timesquash time compression to a buffer.",
    "keywords": [
      "default",
      "int",
      "energy",
      "duration",
      "timesquash"
    ],
    "path": "/docs/reference/buffer-operations/timesquash"
  },
  {
    "title": "`todiffs`",
    "blurb": "Audio process operation to perform discrete differentiation of a buffer.",
    "keywords": [
      "todiffs",
      "process",
      "buffer",
      "operation",
      "bell"
    ],
    "path": "/docs/reference/buffer-operations/todiffs"
  },
  {
    "title": "`tonalkey`",
    "blurb": "Audio descriptor to perform tonal key signature estimation on a buffer.",
    "keywords": [
      "profiles",
      "profile",
      "default",
      "tonalkey",
      "int"
    ],
    "path": "/docs/reference/buffer-analysis/tonalkey"
  },
  {
    "title": "`tosymbol`",
    "blurb": "Casts input value as a symbol.",
    "keywords": [
      "symbol",
      "tosymbol",
      "x",
      "anything",
      "required"
    ],
    "path": "/docs/reference/data-utilities/tosymbol"
  },
  {
    "title": "`transcribe`",
    "blurb": "Adds input buffer to the rendering sequence.",
    "keywords": [
      "buffer",
      "default",
      "null",
      "gain",
      "value"
    ],
    "path": "/docs/reference/buffer-utilities/transcribe"
  },
  {
    "title": "`tri`",
    "blurb": "Generates a bipolar, anti-aliased triangular oscillator as a buffer.",
    "keywords": [
      "buffer",
      "frequency",
      "duration",
      "duty",
      "default"
    ],
    "path": "/docs/reference/buffer-generation/tri"
  },
  {
    "title": "`triangle`",
    "blurb": "Generates a triangular/ramp oscillator as a buffer.",
    "keywords": [
      "buffer",
      "default",
      "frequency",
      "duration",
      "phase"
    ],
    "path": "/docs/reference/buffer-generation/triangle"
  },
  {
    "title": "`trim`",
    "blurb": "Audio process operation for applying silence-based trimming to a buffer.",
    "keywords": [
      "buffer",
      "trim",
      "process",
      "threshold",
      "default"
    ],
    "path": "/docs/reference/buffer-operations/trim"
  },
  {
    "title": "`urn`",
    "blurb": "Returns a unique random number for a given URN identifier.",
    "keywords": [
      "urn",
      "id",
      "int",
      "unique",
      "random"
    ],
    "path": "/docs/reference/randomization/urn"
  },
  {
    "title": "`wavesetrepeat`",
    "blurb": "Audio process operation for applying waveset repetition to a buffer.",
    "keywords": [
      "process",
      "wavesetrepeat",
      "waveset",
      "buffer",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/wavesetrepeat"
  },
  {
    "title": "`wavesetshuffle`",
    "blurb": "Audio process operation for applying waveset shuffling to a buffer.",
    "keywords": [
      "process",
      "wavesetshuffle",
      "buffer",
      "operation",
      "waveset"
    ],
    "path": "/docs/reference/buffer-operations/wavesetshuffle"
  },
  {
    "title": "`waveshape`",
    "blurb": "Audio process operation for waveshaping a buffer.",
    "keywords": [
      "buffer",
      "waveshape",
      "process",
      "phase",
      "duration"
    ],
    "path": "/docs/reference/buffer-operations/waveshape"
  },
  {
    "title": "`window`",
    "blurb": "Audio process operation for applying a windowing function to a buffer.",
    "keywords": [
      "window",
      "process",
      "buffer",
      "default",
      "operation"
    ],
    "path": "/docs/reference/buffer-operations/window"
  },
  {
    "title": "`write`",
    "blurb": "Writes data into disk in either `.txt` or native `.llll` format.",
    "keywords": [
      "default",
      "int",
      "format",
      "data",
      "required"
    ],
    "path": "/docs/reference/data-utilities/write"
  },
  {
    "title": "`x2dx`",
    "blurb": "Takes a list of numbers and returns the differences—i.e., deltas—between adjacent elements.",
    "keywords": [
      "list",
      "x",
      "required",
      "adjacent",
      "elements"
    ],
    "path": "/docs/reference/data-utilities/x2dx"
  },
  {
    "title": "`xchoose`",
    "blurb": "Choose randomly one or more elements from a list, with optional probability weights.",
    "keywords": [
      "list",
      "weights",
      "choices",
      "xchoose",
      "required"
    ],
    "path": "/docs/reference/randomization/xchoose"
  },
  {
    "title": "`xrand`",
    "blurb": "Seed-based random floating point number generator.",
    "keywords": [
      "b",
      "null",
      "value",
      "xrand",
      "float"
    ],
    "path": "/docs/reference/randomization/xrand"
  },
  {
    "title": "`xrandom`",
    "blurb": "Seed-based random integer number generator.",
    "keywords": [
      "b",
      "null",
      "integer",
      "value",
      "xrandom"
    ],
    "path": "/docs/reference/randomization/xrandom"
  },
  {
    "title": "`xscramble`",
    "blurb": "Seed-based random shuffling of elements.",
    "keywords": [
      "xscramble",
      "llll",
      "required",
      "list",
      "true"
    ],
    "path": "/docs/reference/randomization/xscramble"
  },
  {
    "title": "`zerocrossingrate`",
    "blurb": "Audio descriptor to compute the zero-crossing rate of a buffer, defined as the number of sign changes between consecutive signal values divided by the total number of values.",
    "keywords": [
      "zerocrossingrate",
      "buffer",
      "threshold",
      "analysis",
      "mode"
    ],
    "path": "/docs/reference/buffer-analysis/zerocrossingrate"
  },
  {
    "title": "Acknowledgments",
    "blurb": "**bellplay~** relies on several key tools and frameworks:",
    "keywords": [
      "tools",
      "acknowledgments",
      "relies",
      "several",
      "key"
    ],
    "path": "/docs/about/acknowledgments"
  },
  {
    "title": "Audio Corpora",
    "blurb": "One of the core features of **bellplay~** is the ability to handle audio corpora — i.e., large collections of audio data.",
    "keywords": [
      "audio",
      "corpus",
      "buffers",
      "pitch",
      "buffer"
    ],
    "path": "/docs/learning/tutorials/corpus"
  },
  {
    "title": "Audio corpora with SQL tables",
    "blurb": "This tutorial demonstrates how to create an in-memory, queryable corpus of audio buffers by leveraging the `createtable` and `querytable` functions.",
    "keywords": [
      "pitch",
      "segments",
      "table",
      "onset",
      "audio"
    ],
    "path": "/docs/learning/tutorials/buildcorpus"
  },
  {
    "title": "Audio Descriptor Modes",
    "blurb": "When analyzing buffers, we can specify the output format for many of the available audio descriptors.",
    "keywords": [
      "buffer",
      "pitch",
      "analysis",
      "time",
      "series"
    ],
    "path": "/docs/learning/tutorials/analysismodes"
  },
  {
    "title": "Audio Descriptors",
    "blurb": "One of the core features in **bellplay~** is our ability to analyze buffers to extract relevant information.",
    "keywords": [
      "analyze",
      "buffer",
      "onsets",
      "descriptors",
      "onset"
    ],
    "path": "/docs/learning/tutorials/analysis"
  },
  {
    "title": "Audio Mosaicing",
    "blurb": "An example of basic [audio mosaicking](https://www.francoispachet.fr/musaicing/) in **bellplay~** — a target audio is reconstructed using a corpus of short audio segments.",
    "keywords": [
      "audio",
      "features",
      "onset",
      "analysis",
      "target"
    ],
    "path": "/docs/learning/examples/audiomosaic"
  },
  {
    "title": "Audio Resynthesis",
    "blurb": "A simple demonstration of granular quasi-resynthesis via partial tracks, where an sound is used to guide the behavior of sinusoidal grains.",
    "keywords": [
      "onset",
      "frequency",
      "apply",
      "audio",
      "pitch"
    ],
    "path": "/docs/learning/examples/resynthesis"
  },
  {
    "title": "Automation",
    "blurb": "In many cases, we will want to have some kind of DAW-style automation of certain parameters when generating or processing audio in our scripts.",
    "keywords": [
      "dur",
      "fq",
      "oscillator",
      "frequency",
      "wave"
    ],
    "path": "/docs/learning/tutorials/automation"
  },
  {
    "title": "Basic Granulation",
    "blurb": "An example of basic audio granulation, where short audio.",
    "keywords": [
      "grain",
      "onset",
      "offset",
      "duration",
      "graindur"
    ],
    "path": "/docs/learning/examples/basicgranulation"
  },
  {
    "title": "Basic Sampling",
    "blurb": "In **bellplay~**, the `ezsampler` function provides a minimal but flexible interface for mapping symbolic pitch and velocity information to audio buffers.",
    "keywords": [
      "pitch",
      "keymap",
      "velocity",
      "sample",
      "ezsampler"
    ],
    "path": "/docs/learning/tutorials/sampling"
  },
  {
    "title": "Basic Workflow",
    "blurb": "In **bellplay~**, the basic building block of our scripts is the _buffer_.",
    "keywords": [
      "buffer",
      "workflow",
      "basic",
      "buffers",
      "rendering"
    ],
    "path": "/docs/learning/tutorials/basicworkflow"
  },
  {
    "title": "Buffer Keys",
    "blurb": "As mentioned in earlier tutorials, buffers in **bellplay~** are simply nested lists of [key-value pairs](https://en.wikipedia.org/wiki/Name–value_pair).",
    "keywords": [
      "buffer",
      "transcribe",
      "audio",
      "keys",
      "print"
    ],
    "path": "/docs/learning/tutorials/bufferkeys"
  },
  {
    "title": "Buffer Processing",
    "blurb": "One of the core features of **bellplay~** is the ability to dynamically and flexibly apply chains of DSP algorithms to our buffers.",
    "keywords": [
      "path",
      "buffer",
      "reverse",
      "file",
      "processing"
    ],
    "path": "/docs/learning/tutorials/bufferprocessing"
  },
  {
    "title": "Buffer-based Parameters",
    "blurb": "This tutorial shows how to use buffers to control audio parameters.",
    "keywords": [
      "buffer",
      "frequency",
      "carrier",
      "modulator",
      "duration"
    ],
    "path": "/docs/learning/tutorials/audiocontrol"
  },
  {
    "title": "Caching Data",
    "blurb": "In **bellplay~**, computation-heavy operations such as building large corpora, analyzing lots of audio data, and more, can be take a very long time, thus making it more tedious to experiment with our scripts every time we run them.",
    "keywords": [
      "file",
      "buffer",
      "pitch",
      "time",
      "buffers"
    ],
    "path": "/docs/learning/tutorials/caching"
  },
  {
    "title": "credits",
    "blurb": "I’m [Felipe Tovar-Henao](https://felipe-tovar-henao.com), and I develop and maintain **bellplay~**.",
    "keywords": [
      "residency",
      "title",
      "credits",
      "felipe",
      "develop"
    ],
    "path": "/docs/about/credits"
  },
  {
    "title": "Envelope-aware Temporal Alignment",
    "blurb": "This example demonstrates how to align the envelopes of different audio samples based on their peak amplitude times.",
    "keywords": [
      "peak",
      "time",
      "random",
      "maxpeaktime",
      "onset"
    ],
    "path": "/docs/learning/examples/temporalalignment"
  },
  {
    "title": "Exporting",
    "blurb": "Although the **bellplay~** graphical user-interface (GUI) allows us to export the final output of each script, it's sometimes useful being able to programmatically do the same through our scripts.",
    "keywords": [
      "export",
      "buffer",
      "audiopath",
      "exporting",
      "midi"
    ],
    "path": "/docs/learning/tutorials/export"
  },
  {
    "title": "Feature-driven Sampling",
    "blurb": "This tutorial shows how to build [k-dimensional trees](https://en.wikipedia.org/wiki/K-d_tree) to efficiently perform feature-based search on buffers.",
    "keywords": [
      "pitch",
      "match",
      "segments",
      "buffer",
      "tree"
    ],
    "path": "/docs/learning/tutorials/kdtree"
  },
  {
    "title": "Feedback Synthesis",
    "blurb": "This code demonstrates a feedback-based synthesis technique, where buffers are routed back into their own processing chain to create a rich, evolving drone.",
    "keywords": [
      "duration",
      "frequency",
      "random",
      "rand",
      "range"
    ],
    "path": "/docs/learning/examples/feedbacksynth"
  },
  {
    "title": "Frequently Asked Questions",
    "blurb": "Yes—some familiarity with programming concepts is recommended.",
    "keywords": [
      "audio",
      "bell",
      "use",
      "language",
      "max"
    ],
    "path": "/docs/faq"
  },
  {
    "title": "Generating Keymaps",
    "blurb": "This example automatically generates a custom keymap given a list of audio file paths:",
    "keywords": [
      "pitch",
      "keymap",
      "file",
      "midi",
      "retrieve"
    ],
    "path": "/docs/learning/examples/keymaps"
  },
  {
    "title": "Glissando texture",
    "blurb": "An example of using time-varying resampling to generate a polyphonic texture.",
    "keywords": [
      "cents",
      "pan",
      "glissando",
      "set",
      "texture"
    ],
    "path": "/docs/learning/examples/gliss"
  },
  {
    "title": "Importing Audio",
    "blurb": "In **bellplay~** we can also generate buffers by importing our own audio files into our scripts.",
    "keywords": [
      "path",
      "file",
      "audio",
      "relative",
      "absolute"
    ],
    "path": "/docs/learning/tutorials/importingaudio"
  },
  {
    "title": "Importing MIDI",
    "blurb": "**bellplay~** supports importing MIDI files (`.mid` or `.midi`) into our scripts, each described as a list of events.",
    "keywords": [
      "midi",
      "events",
      "pitch",
      "onset",
      "event"
    ],
    "path": "/docs/learning/tutorials/importingmidi"
  },
  {
    "title": "Inspecting Buffers",
    "blurb": "An essential part of writing code is being able to debug unwanted or unexpected behaviors.",
    "keywords": [
      "buffer",
      "envelope",
      "buffers",
      "inspect",
      "label"
    ],
    "path": "/docs/learning/tutorials/bufferinspector"
  },
  {
    "title": "Installation",
    "blurb": "To run **bellplay~**, you can either:",
    "keywords": [
      "run",
      "max",
      "macos",
      "windows",
      "editor"
    ],
    "path": "/docs/installation"
  },
  {
    "title": "Introduction",
    "blurb": "**bellplay~** is a framework and software for offline algorithmic audio in the `bell` programming language.",
    "keywords": [
      "audio",
      "bell",
      "buffers",
      "rendering",
      "introduction"
    ],
    "path": "/docs/index"
  },
  {
    "title": "License",
    "blurb": "**bellplay~** is distributed under the terms of the **GNU General Public License version 3 (GPL-3.0)**.",
    "keywords": [
      "license",
      "distributed",
      "terms",
      "gnu",
      "general"
    ],
    "path": "/docs/about/license"
  },
  {
    "title": "Markers",
    "blurb": "Sometimes it's useful to include markers in the transcription.",
    "keywords": [
      "onset",
      "envelope",
      "markers",
      "harmonics",
      "generate"
    ],
    "path": "/docs/learning/tutorials/markers"
  },
  {
    "title": "Markov Music Generation",
    "blurb": "This script illustrates how to construct and use an nth-order [Markov model](https://en.wikipedia.org/wiki/Markov_model) from MIDI data in **bellplay~** for generative music.",
    "keywords": [
      "events",
      "pitch",
      "timestep",
      "markov",
      "sequence"
    ],
    "path": "/docs/learning/examples/markov"
  },
  {
    "title": "MIDI Retuning",
    "blurb": "An example of JI-based retuning of MIDI events.",
    "keywords": [
      "pitch",
      "midi",
      "retuning",
      "onset",
      "duration"
    ],
    "path": "/docs/learning/examples/midiretuning"
  },
  {
    "title": "More Audio Features",
    "blurb": "This tutorial provides an additional example for using buffer analysis features for audio processing.",
    "keywords": [
      "buffer",
      "audio",
      "pitch",
      "grain",
      "offset"
    ],
    "path": "/docs/learning/tutorials/features"
  },
  {
    "title": "Multi-rendering",
    "blurb": "This tutorial demonstrates a very simple but consequential feature in **bellplay~** — namely, the ability to reuse rendered buffers multiple times to further refine and sculpt the final output into complex and intricate sounds.",
    "keywords": [
      "render",
      "n",
      "onset",
      "gain",
      "buffer"
    ],
    "path": "/docs/learning/tutorials/multirendering"
  },
  {
    "title": "Post-rendering Processing",
    "blurb": "Sometimes it can be more useful or desirable to apply processing to the entire output, instead of processing each buffer individually.",
    "keywords": [
      "apply",
      "processing",
      "buffer",
      "file",
      "pan"
    ],
    "path": "/docs/learning/tutorials/postprocessing"
  },
  {
    "title": "Randomness",
    "blurb": "Randomness is frequently used in algorithmic music to introduce variation and unpredictability.",
    "keywords": [
      "setseed",
      "seed",
      "random",
      "xrand",
      "seeded"
    ],
    "path": "/docs/learning/tutorials/randomness"
  },
  {
    "title": "Rendering",
    "blurb": "Similar to the transcription stage, the rendering stage allows us to define important aspects about the final output.",
    "keywords": [
      "output",
      "rendering",
      "channels",
      "buffer",
      "sampling"
    ],
    "path": "/docs/learning/tutorials/rendering"
  },
  {
    "title": "Score Formatting and Appearance",
    "blurb": "Depending on what you're doing, you might want to have more control over what the score transcription looks like.",
    "keywords": [
      "voice",
      "score",
      "appearance",
      "different",
      "oscillator"
    ],
    "path": "/docs/learning/tutorials/scoreconfig"
  },
  {
    "title": "Support",
    "blurb": "If you're using **bellplay~** and want to support its development:",
    "keywords": [
      "support",
      "using",
      "want",
      "development",
      "make"
    ],
    "path": "/docs/about/support"
  },
  {
    "title": "Temporal Quantization",
    "blurb": "A basic example of temporal quantization, where transient-based segments are temporally shifted to align with a rhythmic grid.",
    "keywords": [
      "onset",
      "buffer",
      "analysis",
      "markers",
      "segment"
    ],
    "path": "/docs/learning/examples/temporalquantization"
  },
  {
    "title": "Transcription",
    "blurb": "When transcribing buffers, we get to specify essential information about how each buffer fits within the final output.",
    "keywords": [
      "gain",
      "onset",
      "progress",
      "buffers",
      "buffer"
    ],
    "path": "/docs/learning/tutorials/transcription"
  },
  {
    "title": "Variable Declarations",
    "blurb": "When writing code, it's good practice to use descriptive variable names.",
    "keywords": [
      "saw",
      "variable",
      "global",
      "bell",
      "names"
    ],
    "path": "/docs/learning/tutorials/variables"
  },
  {
    "title": "Waveshaping Buffers",
    "blurb": "A basic example of waveshaping in **bellplay~**, using a randomly generated breakpoint function.",
    "keywords": [
      "waveshaping",
      "breakpoint",
      "function",
      "using",
      "bpf"
    ],
    "path": "/docs/learning/examples/waveshaping"
  }
]